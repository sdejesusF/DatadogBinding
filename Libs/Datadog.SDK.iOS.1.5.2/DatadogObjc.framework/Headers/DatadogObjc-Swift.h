#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 5.3.2 (swiftlang-1200.0.45 clang-1200.0.32.28)
#ifndef DATADOGOBJC_SWIFT_H
#define DATADOGOBJC_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import Datadog;
@import Foundation;
@import ObjectiveC;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="DatadogObjc",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

@class NSBundle;

SWIFT_CLASS("_TtC11DatadogObjc12DDAppContext")
@interface DDAppContext : NSObject
- (nonnull instancetype)initWithMainBundle:(NSBundle * _Nonnull)mainBundle OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM(NSInteger, DDBatchSize, closed) {
  DDBatchSizeSmall = 0,
  DDBatchSizeMedium = 1,
  DDBatchSizeLarge = 2,
};

@class DDConfigurationBuilder;

SWIFT_CLASS("_TtC11DatadogObjc15DDConfiguration")
@interface DDConfiguration : NSObject
+ (DDConfigurationBuilder * _Nonnull)builderWithClientToken:(NSString * _Nonnull)clientToken environment:(NSString * _Nonnull)environment SWIFT_WARN_UNUSED_RESULT;
+ (DDConfigurationBuilder * _Nonnull)builderWithRumApplicationID:(NSString * _Nonnull)rumApplicationID clientToken:(NSString * _Nonnull)clientToken environment:(NSString * _Nonnull)environment SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class DDEndpoint;
@class DDLogsEndpoint;
@class DDTracesEndpoint;
@protocol DDUIKitRUMViewsPredicate;
@class DDRUMViewEvent;
@class DDRUMResourceEvent;
@class DDRUMActionEvent;
@class DDRUMErrorEvent;
enum DDUploadFrequency : NSInteger;

SWIFT_CLASS("_TtC11DatadogObjc22DDConfigurationBuilder")
@interface DDConfigurationBuilder : NSObject
- (void)enableLogging:(BOOL)enabled;
- (void)enableTracing:(BOOL)enabled;
- (void)enableRUM:(BOOL)enabled;
- (void)setWithEndpoint:(DDEndpoint * _Nonnull)endpoint;
- (void)setWithCustomLogsEndpoint:(NSURL * _Nonnull)customLogsEndpoint;
- (void)setWithCustomTracesEndpoint:(NSURL * _Nonnull)customTracesEndpoint;
- (void)setWithCustomRUMEndpoint:(NSURL * _Nonnull)customRUMEndpoint;
- (void)setWithLogsEndpoint:(DDLogsEndpoint * _Nonnull)logsEndpoint SWIFT_DEPRECATED_MSG("This option is replaced by `set(endpoint:)`. Refer to the new API comment for details.");
- (void)setWithTracesEndpoint:(DDTracesEndpoint * _Nonnull)tracesEndpoint SWIFT_DEPRECATED_MSG("This option is replaced by `set(endpoint:)`. Refer to the new API comment for details.");
- (void)setWithTracedHosts:(NSSet<NSString *> * _Nonnull)tracedHosts SWIFT_DEPRECATED_MSG("This option is replaced by `trackURLSession(firstPartyHosts:)`. Refer to the new API comment for important details.");
- (void)trackWithFirstPartyHosts:(NSSet<NSString *> * _Nonnull)firstPartyHosts SWIFT_DEPRECATED_MSG("This option is replaced by `trackURLSession(firstPartyHosts:)`. Refer to the new API comment for important details.");
- (void)trackURLSessionWithFirstPartyHosts:(NSSet<NSString *> * _Nonnull)firstPartyHosts;
- (void)setWithServiceName:(NSString * _Nonnull)serviceName;
- (void)setWithRumSessionsSamplingRate:(float)rumSessionsSamplingRate;
- (void)trackUIKitRUMViews;
- (void)trackUIKitRUMViewsUsing:(id <DDUIKitRUMViewsPredicate> _Nonnull)predicate;
- (void)trackUIKitActions;
- (void)setRUMViewEventMapper:(DDRUMViewEvent * _Nullable (^ _Nonnull)(DDRUMViewEvent * _Nonnull))mapper;
- (void)setRUMResourceEventMapper:(DDRUMResourceEvent * _Nullable (^ _Nonnull)(DDRUMResourceEvent * _Nonnull))mapper;
- (void)setRUMActionEventMapper:(DDRUMActionEvent * _Nullable (^ _Nonnull)(DDRUMActionEvent * _Nonnull))mapper;
- (void)setRUMErrorEventMapper:(DDRUMErrorEvent * _Nullable (^ _Nonnull)(DDRUMErrorEvent * _Nonnull))mapper;
- (void)setWithBatchSize:(enum DDBatchSize)batchSize;
- (void)setWithUploadFrequency:(enum DDUploadFrequency)uploadFrequency;
- (void)setWithAdditionalConfiguration:(NSDictionary<NSString *, id> * _Nonnull)additionalConfiguration;
- (DDConfiguration * _Nonnull)build SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class DDTrackingConsent;
enum DDSDKVerbosityLevel : NSInteger;

SWIFT_CLASS("_TtC11DatadogObjc9DDDatadog")
@interface DDDatadog : NSObject
+ (void)initializeWithAppContext:(DDAppContext * _Nonnull)appContext configuration:(DDConfiguration * _Nonnull)configuration SWIFT_DEPRECATED_MSG("\n    This method is deprecated and uses the `DDTrackingConsent.granted()` value as a default privacy consent.\n    This means that the SDK will start recording and sending data immediately after initialisation without waiting for the user's consent to be given.\n\n    Use `DDDatadog.initialize(appContext:trackingConsent:configuration:)` and set consent to `granted()` to preserve previous behaviour.\n    ");
+ (void)initializeWithAppContext:(DDAppContext * _Nonnull)appContext trackingConsent:(DDTrackingConsent * _Nonnull)trackingConsent configuration:(DDConfiguration * _Nonnull)configuration;
+ (void)setVerbosityLevel:(enum DDSDKVerbosityLevel)verbosityLevel;
+ (enum DDSDKVerbosityLevel)verbosityLevel SWIFT_WARN_UNUSED_RESULT;
+ (void)setUserInfoWithId:(NSString * _Nullable)id name:(NSString * _Nullable)name email:(NSString * _Nullable)email;
+ (void)setTrackingConsentWithConsent:(DDTrackingConsent * _Nonnull)consent;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC11DatadogObjc10DDEndpoint")
@interface DDEndpoint : NSObject
+ (DDEndpoint * _Nonnull)eu SWIFT_WARN_UNUSED_RESULT;
+ (DDEndpoint * _Nonnull)us SWIFT_WARN_UNUSED_RESULT;
+ (DDEndpoint * _Nonnull)gov SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class DDTracer;
@class DDRUMMonitor;

SWIFT_CLASS("_TtC11DatadogObjc8DDGlobal")
@interface DDGlobal : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) DDTracer * _Nonnull sharedTracer;)
+ (DDTracer * _Nonnull)sharedTracer SWIFT_WARN_UNUSED_RESULT;
+ (void)setSharedTracer:(DDTracer * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) DDRUMMonitor * _Nonnull rum;)
+ (DDRUMMonitor * _Nonnull)rum SWIFT_WARN_UNUSED_RESULT;
+ (void)setRum:(DDRUMMonitor * _Nonnull)value;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC11DatadogObjc19DDHTTPHeadersWriter")
@interface DDHTTPHeadersWriter : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class NSError;
@class DDLoggerBuilder;

SWIFT_CLASS("_TtC11DatadogObjc8DDLogger")
@interface DDLogger : NSObject
- (void)debug:(NSString * _Nonnull)message;
- (void)debug:(NSString * _Nonnull)message attributes:(NSDictionary<NSString *, id> * _Nonnull)attributes;
- (void)debug:(NSString * _Nonnull)message error:(NSError * _Nonnull)error attributes:(NSDictionary<NSString *, id> * _Nonnull)attributes;
- (void)info:(NSString * _Nonnull)message;
- (void)info:(NSString * _Nonnull)message attributes:(NSDictionary<NSString *, id> * _Nonnull)attributes;
- (void)info:(NSString * _Nonnull)message error:(NSError * _Nonnull)error attributes:(NSDictionary<NSString *, id> * _Nonnull)attributes;
- (void)notice:(NSString * _Nonnull)message;
- (void)notice:(NSString * _Nonnull)message attributes:(NSDictionary<NSString *, id> * _Nonnull)attributes;
- (void)notice:(NSString * _Nonnull)message error:(NSError * _Nonnull)error attributes:(NSDictionary<NSString *, id> * _Nonnull)attributes;
- (void)warn:(NSString * _Nonnull)message;
- (void)warn:(NSString * _Nonnull)message attributes:(NSDictionary<NSString *, id> * _Nonnull)attributes;
- (void)warn:(NSString * _Nonnull)message error:(NSError * _Nonnull)error attributes:(NSDictionary<NSString *, id> * _Nonnull)attributes;
- (void)error:(NSString * _Nonnull)message;
- (void)error:(NSString * _Nonnull)message attributes:(NSDictionary<NSString *, id> * _Nonnull)attributes;
- (void)error:(NSString * _Nonnull)message error:(NSError * _Nonnull)error attributes:(NSDictionary<NSString *, id> * _Nonnull)attributes;
- (void)critical:(NSString * _Nonnull)message;
- (void)critical:(NSString * _Nonnull)message attributes:(NSDictionary<NSString *, id> * _Nonnull)attributes;
- (void)critical:(NSString * _Nonnull)message error:(NSError * _Nonnull)error attributes:(NSDictionary<NSString *, id> * _Nonnull)attributes;
- (void)addAttributeForKey:(NSString * _Nonnull)key value:(id _Nonnull)value;
- (void)removeAttributeForKey:(NSString * _Nonnull)key;
- (void)addTagWithKey:(NSString * _Nonnull)key value:(NSString * _Nonnull)value;
- (void)removeTagWithKey:(NSString * _Nonnull)key;
- (void)addWithTag:(NSString * _Nonnull)tag;
- (void)removeWithTag:(NSString * _Nonnull)tag;
+ (DDLoggerBuilder * _Nonnull)builder SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc15DDLoggerBuilder")
@interface DDLoggerBuilder : NSObject
- (void)setWithServiceName:(NSString * _Nonnull)serviceName;
- (void)setWithLoggerName:(NSString * _Nonnull)loggerName;
- (void)sendNetworkInfo:(BOOL)enabled;
- (void)sendLogsToDatadog:(BOOL)enabled;
- (void)printLogsToConsole:(BOOL)enabled;
- (DDLogger * _Nonnull)build SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc14DDLogsEndpoint")
@interface DDLogsEndpoint : NSObject
+ (DDLogsEndpoint * _Nonnull)eu SWIFT_WARN_UNUSED_RESULT;
+ (DDLogsEndpoint * _Nonnull)us SWIFT_WARN_UNUSED_RESULT;
+ (DDLogsEndpoint * _Nonnull)gov SWIFT_WARN_UNUSED_RESULT;
+ (DDLogsEndpoint * _Nonnull)customWithUrl:(NSString * _Nonnull)url SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc22DDNSURLSessionDelegate")
@interface DDNSURLSessionDelegate : DDURLSessionDelegate
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithAdditionalFirstPartyHosts:(NSSet<NSString *> * _Nonnull)additionalFirstPartyHosts OBJC_DESIGNATED_INITIALIZER;
@end

@class DDRUMActionEventDD;
@class DDRUMActionEventAction;
@class DDRUMActionEventApplication;
@class DDRUMActionEventRUMConnectivity;
@class NSNumber;
@class DDRUMActionEventSession;
@class DDRUMActionEventRUMUser;
@class DDRUMActionEventView;

SWIFT_CLASS("_TtC11DatadogObjc16DDRUMActionEvent")
@interface DDRUMActionEvent : NSObject
@property (nonatomic, readonly, strong) DDRUMActionEventDD * _Nonnull dd;
@property (nonatomic, readonly, strong) DDRUMActionEventAction * _Nonnull action;
@property (nonatomic, readonly, strong) DDRUMActionEventApplication * _Nonnull application;
@property (nonatomic, readonly, strong) DDRUMActionEventRUMConnectivity * _Nullable connectivity;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull date;
@property (nonatomic, readonly, copy) NSString * _Nullable service;
@property (nonatomic, readonly, strong) DDRUMActionEventSession * _Nonnull session;
@property (nonatomic, readonly, copy) NSString * _Nonnull type;
@property (nonatomic, readonly, strong) DDRUMActionEventRUMUser * _Nullable usr;
@property (nonatomic, readonly, strong) DDRUMActionEventView * _Nonnull view;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class DDRUMActionEventActionCrash;
@class DDRUMActionEventActionError;
@class DDRUMActionEventActionLongTask;
@class DDRUMActionEventActionResource;
@class DDRUMActionEventActionTarget;
enum DDRUMActionEventActionActionType : NSInteger;

SWIFT_CLASS("_TtC11DatadogObjc22DDRUMActionEventAction")
@interface DDRUMActionEventAction : NSObject
@property (nonatomic, readonly, strong) DDRUMActionEventActionCrash * _Nullable crash;
@property (nonatomic, readonly, strong) DDRUMActionEventActionError * _Nullable error;
@property (nonatomic, readonly, copy) NSString * _Nullable id;
@property (nonatomic, readonly, strong) NSNumber * _Nullable loadingTime;
@property (nonatomic, readonly, strong) DDRUMActionEventActionLongTask * _Nullable longTask;
@property (nonatomic, readonly, strong) DDRUMActionEventActionResource * _Nullable resource;
@property (nonatomic, readonly, strong) DDRUMActionEventActionTarget * _Nullable target;
@property (nonatomic, readonly) enum DDRUMActionEventActionActionType type;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDRUMActionEventActionActionType, closed) {
  DDRUMActionEventActionActionTypeCustom = 0,
  DDRUMActionEventActionActionTypeClick = 1,
  DDRUMActionEventActionActionTypeTap = 2,
  DDRUMActionEventActionActionTypeScroll = 3,
  DDRUMActionEventActionActionTypeSwipe = 4,
  DDRUMActionEventActionActionTypeApplicationStart = 5,
  DDRUMActionEventActionActionTypeBack = 6,
};


SWIFT_CLASS("_TtC11DatadogObjc27DDRUMActionEventActionCrash")
@interface DDRUMActionEventActionCrash : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nonnull count;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc27DDRUMActionEventActionError")
@interface DDRUMActionEventActionError : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nonnull count;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc30DDRUMActionEventActionLongTask")
@interface DDRUMActionEventActionLongTask : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nonnull count;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc30DDRUMActionEventActionResource")
@interface DDRUMActionEventActionResource : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nonnull count;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc28DDRUMActionEventActionTarget")
@interface DDRUMActionEventActionTarget : NSObject
@property (nonatomic, copy) NSString * _Nonnull name;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc27DDRUMActionEventApplication")
@interface DDRUMActionEventApplication : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc18DDRUMActionEventDD")
@interface DDRUMActionEventDD : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nonnull formatVersion;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class DDRUMActionEventRUMConnectivityCellular;
enum DDRUMActionEventRUMConnectivityStatus : NSInteger;

SWIFT_CLASS("_TtC11DatadogObjc31DDRUMActionEventRUMConnectivity")
@interface DDRUMActionEventRUMConnectivity : NSObject
@property (nonatomic, readonly, strong) DDRUMActionEventRUMConnectivityCellular * _Nullable cellular;
@property (nonatomic, readonly, copy) NSArray<NSNumber *> * _Nonnull interfaces;
@property (nonatomic, readonly) enum DDRUMActionEventRUMConnectivityStatus status;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc39DDRUMActionEventRUMConnectivityCellular")
@interface DDRUMActionEventRUMConnectivityCellular : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable carrierName;
@property (nonatomic, readonly, copy) NSString * _Nullable technology;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDRUMActionEventRUMConnectivityInterfaces, closed) {
  DDRUMActionEventRUMConnectivityInterfacesBluetooth = 0,
  DDRUMActionEventRUMConnectivityInterfacesCellular = 1,
  DDRUMActionEventRUMConnectivityInterfacesEthernet = 2,
  DDRUMActionEventRUMConnectivityInterfacesWifi = 3,
  DDRUMActionEventRUMConnectivityInterfacesWimax = 4,
  DDRUMActionEventRUMConnectivityInterfacesMixed = 5,
  DDRUMActionEventRUMConnectivityInterfacesOther = 6,
  DDRUMActionEventRUMConnectivityInterfacesUnknown = 7,
  DDRUMActionEventRUMConnectivityInterfacesNone = 8,
};

typedef SWIFT_ENUM(NSInteger, DDRUMActionEventRUMConnectivityStatus, closed) {
  DDRUMActionEventRUMConnectivityStatusConnected = 0,
  DDRUMActionEventRUMConnectivityStatusNotConnected = 1,
  DDRUMActionEventRUMConnectivityStatusMaybe = 2,
};


SWIFT_CLASS("_TtC11DatadogObjc23DDRUMActionEventRUMUser")
@interface DDRUMActionEventRUMUser : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable email;
@property (nonatomic, readonly, copy) NSString * _Nullable id;
@property (nonatomic, readonly, copy) NSString * _Nullable name;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum DDRUMActionEventSessionSessionType : NSInteger;

SWIFT_CLASS("_TtC11DatadogObjc23DDRUMActionEventSession")
@interface DDRUMActionEventSession : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nullable hasReplay;
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
@property (nonatomic, readonly) enum DDRUMActionEventSessionSessionType type;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDRUMActionEventSessionSessionType, closed) {
  DDRUMActionEventSessionSessionTypeUser = 0,
  DDRUMActionEventSessionSessionTypeSynthetics = 1,
};


SWIFT_CLASS("_TtC11DatadogObjc20DDRUMActionEventView")
@interface DDRUMActionEventView : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, copy) NSString * _Nullable referrer;
@property (nonatomic, copy) NSString * _Nonnull url;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class DDRUMErrorEventDD;
@class DDRUMErrorEventAction;
@class DDRUMErrorEventApplication;
@class DDRUMErrorEventRUMConnectivity;
@class DDRUMErrorEventError;
@class DDRUMErrorEventSession;
@class DDRUMErrorEventRUMUser;
@class DDRUMErrorEventView;

SWIFT_CLASS("_TtC11DatadogObjc15DDRUMErrorEvent")
@interface DDRUMErrorEvent : NSObject
@property (nonatomic, readonly, strong) DDRUMErrorEventDD * _Nonnull dd;
@property (nonatomic, readonly, strong) DDRUMErrorEventAction * _Nullable action;
@property (nonatomic, readonly, strong) DDRUMErrorEventApplication * _Nonnull application;
@property (nonatomic, readonly, strong) DDRUMErrorEventRUMConnectivity * _Nullable connectivity;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull date;
@property (nonatomic, readonly, strong) DDRUMErrorEventError * _Nonnull error;
@property (nonatomic, readonly, copy) NSString * _Nullable service;
@property (nonatomic, readonly, strong) DDRUMErrorEventSession * _Nonnull session;
@property (nonatomic, readonly, copy) NSString * _Nonnull type;
@property (nonatomic, readonly, strong) DDRUMErrorEventRUMUser * _Nullable usr;
@property (nonatomic, readonly, strong) DDRUMErrorEventView * _Nonnull view;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc21DDRUMErrorEventAction")
@interface DDRUMErrorEventAction : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc26DDRUMErrorEventApplication")
@interface DDRUMErrorEventApplication : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc17DDRUMErrorEventDD")
@interface DDRUMErrorEventDD : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nonnull formatVersion;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class DDRUMErrorEventErrorResource;
enum DDRUMErrorEventErrorSource : NSInteger;

SWIFT_CLASS("_TtC11DatadogObjc20DDRUMErrorEventError")
@interface DDRUMErrorEventError : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nullable isCrash;
@property (nonatomic, copy) NSString * _Nonnull message;
@property (nonatomic, readonly, strong) DDRUMErrorEventErrorResource * _Nullable resource;
@property (nonatomic, readonly) enum DDRUMErrorEventErrorSource source;
@property (nonatomic, copy) NSString * _Nullable stack;
@property (nonatomic, readonly, copy) NSString * _Nullable type;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum DDRUMErrorEventErrorResourceRUMMethod : NSInteger;
@class DDRUMErrorEventErrorResourceProvider;

SWIFT_CLASS("_TtC11DatadogObjc28DDRUMErrorEventErrorResource")
@interface DDRUMErrorEventErrorResource : NSObject
@property (nonatomic, readonly) enum DDRUMErrorEventErrorResourceRUMMethod method;
@property (nonatomic, readonly, strong) DDRUMErrorEventErrorResourceProvider * _Nullable provider;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull statusCode;
@property (nonatomic, copy) NSString * _Nonnull url;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum DDRUMErrorEventErrorResourceProviderProviderType : NSInteger;

SWIFT_CLASS("_TtC11DatadogObjc36DDRUMErrorEventErrorResourceProvider")
@interface DDRUMErrorEventErrorResourceProvider : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable domain;
@property (nonatomic, readonly, copy) NSString * _Nullable name;
@property (nonatomic, readonly) enum DDRUMErrorEventErrorResourceProviderProviderType type;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDRUMErrorEventErrorResourceProviderProviderType, closed) {
  DDRUMErrorEventErrorResourceProviderProviderTypeNone = 0,
  DDRUMErrorEventErrorResourceProviderProviderTypeAd = 1,
  DDRUMErrorEventErrorResourceProviderProviderTypeAdvertising = 2,
  DDRUMErrorEventErrorResourceProviderProviderTypeAnalytics = 3,
  DDRUMErrorEventErrorResourceProviderProviderTypeCdn = 4,
  DDRUMErrorEventErrorResourceProviderProviderTypeContent = 5,
  DDRUMErrorEventErrorResourceProviderProviderTypeCustomerSuccess = 6,
  DDRUMErrorEventErrorResourceProviderProviderTypeFirstParty = 7,
  DDRUMErrorEventErrorResourceProviderProviderTypeHosting = 8,
  DDRUMErrorEventErrorResourceProviderProviderTypeMarketing = 9,
  DDRUMErrorEventErrorResourceProviderProviderTypeOther = 10,
  DDRUMErrorEventErrorResourceProviderProviderTypeSocial = 11,
  DDRUMErrorEventErrorResourceProviderProviderTypeTagManager = 12,
  DDRUMErrorEventErrorResourceProviderProviderTypeUtility = 13,
  DDRUMErrorEventErrorResourceProviderProviderTypeVideo = 14,
};

typedef SWIFT_ENUM(NSInteger, DDRUMErrorEventErrorResourceRUMMethod, closed) {
  DDRUMErrorEventErrorResourceRUMMethodPost = 0,
  DDRUMErrorEventErrorResourceRUMMethodGet = 1,
  DDRUMErrorEventErrorResourceRUMMethodHead = 2,
  DDRUMErrorEventErrorResourceRUMMethodPut = 3,
  DDRUMErrorEventErrorResourceRUMMethodDelete = 4,
  DDRUMErrorEventErrorResourceRUMMethodPatch = 5,
};

typedef SWIFT_ENUM(NSInteger, DDRUMErrorEventErrorSource, closed) {
  DDRUMErrorEventErrorSourceNetwork = 0,
  DDRUMErrorEventErrorSourceSource = 1,
  DDRUMErrorEventErrorSourceConsole = 2,
  DDRUMErrorEventErrorSourceLogger = 3,
  DDRUMErrorEventErrorSourceAgent = 4,
  DDRUMErrorEventErrorSourceWebview = 5,
  DDRUMErrorEventErrorSourceCustom = 6,
};

@class DDRUMErrorEventRUMConnectivityCellular;
enum DDRUMErrorEventRUMConnectivityStatus : NSInteger;

SWIFT_CLASS("_TtC11DatadogObjc30DDRUMErrorEventRUMConnectivity")
@interface DDRUMErrorEventRUMConnectivity : NSObject
@property (nonatomic, readonly, strong) DDRUMErrorEventRUMConnectivityCellular * _Nullable cellular;
@property (nonatomic, readonly, copy) NSArray<NSNumber *> * _Nonnull interfaces;
@property (nonatomic, readonly) enum DDRUMErrorEventRUMConnectivityStatus status;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc38DDRUMErrorEventRUMConnectivityCellular")
@interface DDRUMErrorEventRUMConnectivityCellular : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable carrierName;
@property (nonatomic, readonly, copy) NSString * _Nullable technology;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDRUMErrorEventRUMConnectivityInterfaces, closed) {
  DDRUMErrorEventRUMConnectivityInterfacesBluetooth = 0,
  DDRUMErrorEventRUMConnectivityInterfacesCellular = 1,
  DDRUMErrorEventRUMConnectivityInterfacesEthernet = 2,
  DDRUMErrorEventRUMConnectivityInterfacesWifi = 3,
  DDRUMErrorEventRUMConnectivityInterfacesWimax = 4,
  DDRUMErrorEventRUMConnectivityInterfacesMixed = 5,
  DDRUMErrorEventRUMConnectivityInterfacesOther = 6,
  DDRUMErrorEventRUMConnectivityInterfacesUnknown = 7,
  DDRUMErrorEventRUMConnectivityInterfacesNone = 8,
};

typedef SWIFT_ENUM(NSInteger, DDRUMErrorEventRUMConnectivityStatus, closed) {
  DDRUMErrorEventRUMConnectivityStatusConnected = 0,
  DDRUMErrorEventRUMConnectivityStatusNotConnected = 1,
  DDRUMErrorEventRUMConnectivityStatusMaybe = 2,
};


SWIFT_CLASS("_TtC11DatadogObjc22DDRUMErrorEventRUMUser")
@interface DDRUMErrorEventRUMUser : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable email;
@property (nonatomic, readonly, copy) NSString * _Nullable id;
@property (nonatomic, readonly, copy) NSString * _Nullable name;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum DDRUMErrorEventSessionSessionType : NSInteger;

SWIFT_CLASS("_TtC11DatadogObjc22DDRUMErrorEventSession")
@interface DDRUMErrorEventSession : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nullable hasReplay;
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
@property (nonatomic, readonly) enum DDRUMErrorEventSessionSessionType type;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDRUMErrorEventSessionSessionType, closed) {
  DDRUMErrorEventSessionSessionTypeUser = 0,
  DDRUMErrorEventSessionSessionTypeSynthetics = 1,
};


SWIFT_CLASS("_TtC11DatadogObjc19DDRUMErrorEventView")
@interface DDRUMErrorEventView : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, copy) NSString * _Nullable referrer;
@property (nonatomic, copy) NSString * _Nonnull url;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDRUMErrorSource, closed) {
/// Error originated in the source code.
  DDRUMErrorSourceSource = 0,
/// Error originated in the network layer.
  DDRUMErrorSourceNetwork = 1,
/// Error originated in a webview.
  DDRUMErrorSourceWebview = 2,
/// Custom error source.
  DDRUMErrorSourceCustom = 3,
};

typedef SWIFT_ENUM(NSInteger, DDRUMMethod, closed) {
  DDRUMMethodPost = 0,
  DDRUMMethodGet = 1,
  DDRUMMethodHead = 2,
  DDRUMMethodPut = 3,
  DDRUMMethodDelete = 4,
  DDRUMMethodPatch = 5,
};

@class UIViewController;
@class NSURLSessionTaskMetrics;
@class NSURLResponse;
enum DDRUMResourceType : NSInteger;
enum DDRUMUserActionType : NSInteger;

SWIFT_CLASS("_TtC11DatadogObjc12DDRUMMonitor")
@interface DDRUMMonitor : NSObject
- (nonnull instancetype)init;
- (void)startViewWithViewController:(UIViewController * _Nonnull)viewController path:(NSString * _Nullable)path attributes:(NSDictionary<NSString *, id> * _Nonnull)attributes;
- (void)stopViewWithViewController:(UIViewController * _Nonnull)viewController attributes:(NSDictionary<NSString *, id> * _Nonnull)attributes;
- (void)startViewWithKey:(NSString * _Nonnull)key path:(NSString * _Nullable)path attributes:(NSDictionary<NSString *, id> * _Nonnull)attributes;
- (void)stopViewWithKey:(NSString * _Nonnull)key attributes:(NSDictionary<NSString *, id> * _Nonnull)attributes;
- (void)addTimingWithName:(NSString * _Nonnull)name;
- (void)addErrorWithMessage:(NSString * _Nonnull)message source:(enum DDRUMErrorSource)source stack:(NSString * _Nullable)stack attributes:(NSDictionary<NSString *, id> * _Nonnull)attributes;
- (void)addErrorWithError:(NSError * _Nonnull)error source:(enum DDRUMErrorSource)source attributes:(NSDictionary<NSString *, id> * _Nonnull)attributes;
- (void)startResourceLoadingWithResourceKey:(NSString * _Nonnull)resourceKey request:(NSURLRequest * _Nonnull)request attributes:(NSDictionary<NSString *, id> * _Nonnull)attributes;
- (void)startResourceLoadingWithResourceKey:(NSString * _Nonnull)resourceKey url:(NSURL * _Nonnull)url attributes:(NSDictionary<NSString *, id> * _Nonnull)attributes;
- (void)startResourceLoadingWithResourceKey:(NSString * _Nonnull)resourceKey httpMethod:(enum DDRUMMethod)httpMethod urlString:(NSString * _Nonnull)urlString attributes:(NSDictionary<NSString *, id> * _Nonnull)attributes;
- (void)addResourceMetricsWithResourceKey:(NSString * _Nonnull)resourceKey metrics:(NSURLSessionTaskMetrics * _Nonnull)metrics attributes:(NSDictionary<NSString *, id> * _Nonnull)attributes;
- (void)stopResourceLoadingWithResourceKey:(NSString * _Nonnull)resourceKey response:(NSURLResponse * _Nonnull)response size:(NSNumber * _Nullable)size attributes:(NSDictionary<NSString *, id> * _Nonnull)attributes;
- (void)stopResourceLoadingWithResourceKey:(NSString * _Nonnull)resourceKey statusCode:(NSNumber * _Nullable)statusCode kind:(enum DDRUMResourceType)kind size:(NSNumber * _Nullable)size attributes:(NSDictionary<NSString *, id> * _Nonnull)attributes;
- (void)stopResourceLoadingWithErrorWithResourceKey:(NSString * _Nonnull)resourceKey error:(NSError * _Nonnull)error response:(NSURLResponse * _Nullable)response attributes:(NSDictionary<NSString *, id> * _Nonnull)attributes;
- (void)stopResourceLoadingWithErrorWithResourceKey:(NSString * _Nonnull)resourceKey errorMessage:(NSString * _Nonnull)errorMessage response:(NSURLResponse * _Nullable)response attributes:(NSDictionary<NSString *, id> * _Nonnull)attributes;
- (void)startUserActionWithType:(enum DDRUMUserActionType)type name:(NSString * _Nonnull)name attributes:(NSDictionary<NSString *, id> * _Nonnull)attributes;
- (void)stopUserActionWithType:(enum DDRUMUserActionType)type name:(NSString * _Nullable)name attributes:(NSDictionary<NSString *, id> * _Nonnull)attributes;
- (void)addUserActionWithType:(enum DDRUMUserActionType)type name:(NSString * _Nonnull)name attributes:(NSDictionary<NSString *, id> * _Nonnull)attributes;
- (void)addAttributeForKey:(NSString * _Nonnull)key value:(id _Nonnull)value;
- (void)removeAttributeForKey:(NSString * _Nonnull)key;
@end

@class DDRUMResourceEventDD;
@class DDRUMResourceEventAction;
@class DDRUMResourceEventApplication;
@class DDRUMResourceEventRUMConnectivity;
@class DDRUMResourceEventResource;
@class DDRUMResourceEventSession;
@class DDRUMResourceEventRUMUser;
@class DDRUMResourceEventView;

SWIFT_CLASS("_TtC11DatadogObjc18DDRUMResourceEvent")
@interface DDRUMResourceEvent : NSObject
@property (nonatomic, readonly, strong) DDRUMResourceEventDD * _Nonnull dd;
@property (nonatomic, readonly, strong) DDRUMResourceEventAction * _Nullable action;
@property (nonatomic, readonly, strong) DDRUMResourceEventApplication * _Nonnull application;
@property (nonatomic, readonly, strong) DDRUMResourceEventRUMConnectivity * _Nullable connectivity;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull date;
@property (nonatomic, readonly, strong) DDRUMResourceEventResource * _Nonnull resource;
@property (nonatomic, readonly, copy) NSString * _Nullable service;
@property (nonatomic, readonly, strong) DDRUMResourceEventSession * _Nonnull session;
@property (nonatomic, readonly, copy) NSString * _Nonnull type;
@property (nonatomic, readonly, strong) DDRUMResourceEventRUMUser * _Nullable usr;
@property (nonatomic, readonly, strong) DDRUMResourceEventView * _Nonnull view;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc24DDRUMResourceEventAction")
@interface DDRUMResourceEventAction : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc29DDRUMResourceEventApplication")
@interface DDRUMResourceEventApplication : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc20DDRUMResourceEventDD")
@interface DDRUMResourceEventDD : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nonnull formatVersion;
@property (nonatomic, readonly, copy) NSString * _Nullable spanId;
@property (nonatomic, readonly, copy) NSString * _Nullable traceId;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class DDRUMResourceEventRUMConnectivityCellular;
enum DDRUMResourceEventRUMConnectivityStatus : NSInteger;

SWIFT_CLASS("_TtC11DatadogObjc33DDRUMResourceEventRUMConnectivity")
@interface DDRUMResourceEventRUMConnectivity : NSObject
@property (nonatomic, readonly, strong) DDRUMResourceEventRUMConnectivityCellular * _Nullable cellular;
@property (nonatomic, readonly, copy) NSArray<NSNumber *> * _Nonnull interfaces;
@property (nonatomic, readonly) enum DDRUMResourceEventRUMConnectivityStatus status;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc41DDRUMResourceEventRUMConnectivityCellular")
@interface DDRUMResourceEventRUMConnectivityCellular : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable carrierName;
@property (nonatomic, readonly, copy) NSString * _Nullable technology;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDRUMResourceEventRUMConnectivityInterfaces, closed) {
  DDRUMResourceEventRUMConnectivityInterfacesBluetooth = 0,
  DDRUMResourceEventRUMConnectivityInterfacesCellular = 1,
  DDRUMResourceEventRUMConnectivityInterfacesEthernet = 2,
  DDRUMResourceEventRUMConnectivityInterfacesWifi = 3,
  DDRUMResourceEventRUMConnectivityInterfacesWimax = 4,
  DDRUMResourceEventRUMConnectivityInterfacesMixed = 5,
  DDRUMResourceEventRUMConnectivityInterfacesOther = 6,
  DDRUMResourceEventRUMConnectivityInterfacesUnknown = 7,
  DDRUMResourceEventRUMConnectivityInterfacesNone = 8,
};

typedef SWIFT_ENUM(NSInteger, DDRUMResourceEventRUMConnectivityStatus, closed) {
  DDRUMResourceEventRUMConnectivityStatusConnected = 0,
  DDRUMResourceEventRUMConnectivityStatusNotConnected = 1,
  DDRUMResourceEventRUMConnectivityStatusMaybe = 2,
};


SWIFT_CLASS("_TtC11DatadogObjc25DDRUMResourceEventRUMUser")
@interface DDRUMResourceEventRUMUser : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable email;
@property (nonatomic, readonly, copy) NSString * _Nullable id;
@property (nonatomic, readonly, copy) NSString * _Nullable name;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class DDRUMResourceEventResourceConnect;
@class DDRUMResourceEventResourceDNS;
@class DDRUMResourceEventResourceDownload;
@class DDRUMResourceEventResourceFirstByte;
enum DDRUMResourceEventResourceRUMMethod : NSInteger;
@class DDRUMResourceEventResourceProvider;
@class DDRUMResourceEventResourceRedirect;
@class DDRUMResourceEventResourceSSL;
enum DDRUMResourceEventResourceResourceType : NSInteger;

SWIFT_CLASS("_TtC11DatadogObjc26DDRUMResourceEventResource")
@interface DDRUMResourceEventResource : NSObject
@property (nonatomic, readonly, strong) DDRUMResourceEventResourceConnect * _Nullable connect;
@property (nonatomic, readonly, strong) DDRUMResourceEventResourceDNS * _Nullable dns;
@property (nonatomic, readonly, strong) DDRUMResourceEventResourceDownload * _Nullable download;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull duration;
@property (nonatomic, readonly, strong) DDRUMResourceEventResourceFirstByte * _Nullable firstByte;
@property (nonatomic, readonly, copy) NSString * _Nullable id;
@property (nonatomic, readonly) enum DDRUMResourceEventResourceRUMMethod method;
@property (nonatomic, readonly, strong) DDRUMResourceEventResourceProvider * _Nullable provider;
@property (nonatomic, readonly, strong) DDRUMResourceEventResourceRedirect * _Nullable redirect;
@property (nonatomic, readonly, strong) NSNumber * _Nullable size;
@property (nonatomic, readonly, strong) DDRUMResourceEventResourceSSL * _Nullable ssl;
@property (nonatomic, readonly, strong) NSNumber * _Nullable statusCode;
@property (nonatomic, readonly) enum DDRUMResourceEventResourceResourceType type;
@property (nonatomic, copy) NSString * _Nonnull url;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc33DDRUMResourceEventResourceConnect")
@interface DDRUMResourceEventResourceConnect : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nonnull duration;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull start;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc29DDRUMResourceEventResourceDNS")
@interface DDRUMResourceEventResourceDNS : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nonnull duration;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull start;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc34DDRUMResourceEventResourceDownload")
@interface DDRUMResourceEventResourceDownload : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nonnull duration;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull start;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc35DDRUMResourceEventResourceFirstByte")
@interface DDRUMResourceEventResourceFirstByte : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nonnull duration;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull start;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum DDRUMResourceEventResourceProviderProviderType : NSInteger;

SWIFT_CLASS("_TtC11DatadogObjc34DDRUMResourceEventResourceProvider")
@interface DDRUMResourceEventResourceProvider : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable domain;
@property (nonatomic, readonly, copy) NSString * _Nullable name;
@property (nonatomic, readonly) enum DDRUMResourceEventResourceProviderProviderType type;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDRUMResourceEventResourceProviderProviderType, closed) {
  DDRUMResourceEventResourceProviderProviderTypeNone = 0,
  DDRUMResourceEventResourceProviderProviderTypeAd = 1,
  DDRUMResourceEventResourceProviderProviderTypeAdvertising = 2,
  DDRUMResourceEventResourceProviderProviderTypeAnalytics = 3,
  DDRUMResourceEventResourceProviderProviderTypeCdn = 4,
  DDRUMResourceEventResourceProviderProviderTypeContent = 5,
  DDRUMResourceEventResourceProviderProviderTypeCustomerSuccess = 6,
  DDRUMResourceEventResourceProviderProviderTypeFirstParty = 7,
  DDRUMResourceEventResourceProviderProviderTypeHosting = 8,
  DDRUMResourceEventResourceProviderProviderTypeMarketing = 9,
  DDRUMResourceEventResourceProviderProviderTypeOther = 10,
  DDRUMResourceEventResourceProviderProviderTypeSocial = 11,
  DDRUMResourceEventResourceProviderProviderTypeTagManager = 12,
  DDRUMResourceEventResourceProviderProviderTypeUtility = 13,
  DDRUMResourceEventResourceProviderProviderTypeVideo = 14,
};

typedef SWIFT_ENUM(NSInteger, DDRUMResourceEventResourceRUMMethod, closed) {
  DDRUMResourceEventResourceRUMMethodNone = 0,
  DDRUMResourceEventResourceRUMMethodPost = 1,
  DDRUMResourceEventResourceRUMMethodGet = 2,
  DDRUMResourceEventResourceRUMMethodHead = 3,
  DDRUMResourceEventResourceRUMMethodPut = 4,
  DDRUMResourceEventResourceRUMMethodDelete = 5,
  DDRUMResourceEventResourceRUMMethodPatch = 6,
};


SWIFT_CLASS("_TtC11DatadogObjc34DDRUMResourceEventResourceRedirect")
@interface DDRUMResourceEventResourceRedirect : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nonnull duration;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull start;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDRUMResourceEventResourceResourceType, closed) {
  DDRUMResourceEventResourceResourceTypeDocument = 0,
  DDRUMResourceEventResourceResourceTypeXhr = 1,
  DDRUMResourceEventResourceResourceTypeBeacon = 2,
  DDRUMResourceEventResourceResourceTypeFetch = 3,
  DDRUMResourceEventResourceResourceTypeCss = 4,
  DDRUMResourceEventResourceResourceTypeJs = 5,
  DDRUMResourceEventResourceResourceTypeImage = 6,
  DDRUMResourceEventResourceResourceTypeFont = 7,
  DDRUMResourceEventResourceResourceTypeMedia = 8,
  DDRUMResourceEventResourceResourceTypeOther = 9,
};


SWIFT_CLASS("_TtC11DatadogObjc29DDRUMResourceEventResourceSSL")
@interface DDRUMResourceEventResourceSSL : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nonnull duration;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull start;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum DDRUMResourceEventSessionSessionType : NSInteger;

SWIFT_CLASS("_TtC11DatadogObjc25DDRUMResourceEventSession")
@interface DDRUMResourceEventSession : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nullable hasReplay;
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
@property (nonatomic, readonly) enum DDRUMResourceEventSessionSessionType type;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDRUMResourceEventSessionSessionType, closed) {
  DDRUMResourceEventSessionSessionTypeUser = 0,
  DDRUMResourceEventSessionSessionTypeSynthetics = 1,
};


SWIFT_CLASS("_TtC11DatadogObjc22DDRUMResourceEventView")
@interface DDRUMResourceEventView : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, copy) NSString * _Nullable referrer;
@property (nonatomic, copy) NSString * _Nonnull url;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDRUMResourceType, closed) {
  DDRUMResourceTypeImage = 0,
  DDRUMResourceTypeXhr = 1,
  DDRUMResourceTypeBeacon = 2,
  DDRUMResourceTypeCss = 3,
  DDRUMResourceTypeDocument = 4,
  DDRUMResourceTypeFetch = 5,
  DDRUMResourceTypeFont = 6,
  DDRUMResourceTypeJs = 7,
  DDRUMResourceTypeMedia = 8,
  DDRUMResourceTypeOther = 9,
};

typedef SWIFT_ENUM(NSInteger, DDRUMUserActionType, closed) {
  DDRUMUserActionTypeTap = 0,
  DDRUMUserActionTypeScroll = 1,
  DDRUMUserActionTypeSwipe = 2,
  DDRUMUserActionTypeCustom = 3,
};


SWIFT_CLASS("_TtC11DatadogObjc9DDRUMView")
@interface DDRUMView : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull path;
@property (nonatomic, readonly, copy) NSDictionary<NSString *, id> * _Nonnull attributes;
/// Initializes the RUM View description.
/// \param path the RUM View path, appearing as “PATH” in RUM Explorer.
///
/// \param attributes additional attributes to associate with the RUM View.
///
- (nonnull instancetype)initWithPath:(NSString * _Nonnull)path attributes:(NSDictionary<NSString *, id> * _Nonnull)attributes OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class DDRUMViewEventDD;
@class DDRUMViewEventApplication;
@class DDRUMViewEventRUMConnectivity;
@class DDRUMViewEventSession;
@class DDRUMViewEventRUMUser;
@class DDRUMViewEventView;

SWIFT_CLASS("_TtC11DatadogObjc14DDRUMViewEvent")
@interface DDRUMViewEvent : NSObject
@property (nonatomic, readonly, strong) DDRUMViewEventDD * _Nonnull dd;
@property (nonatomic, readonly, strong) DDRUMViewEventApplication * _Nonnull application;
@property (nonatomic, readonly, strong) DDRUMViewEventRUMConnectivity * _Nullable connectivity;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull date;
@property (nonatomic, readonly, copy) NSString * _Nullable service;
@property (nonatomic, readonly, strong) DDRUMViewEventSession * _Nonnull session;
@property (nonatomic, readonly, copy) NSString * _Nonnull type;
@property (nonatomic, readonly, strong) DDRUMViewEventRUMUser * _Nullable usr;
@property (nonatomic, readonly, strong) DDRUMViewEventView * _Nonnull view;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc25DDRUMViewEventApplication")
@interface DDRUMViewEventApplication : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc16DDRUMViewEventDD")
@interface DDRUMViewEventDD : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nonnull documentVersion;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull formatVersion;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class DDRUMViewEventRUMConnectivityCellular;
enum DDRUMViewEventRUMConnectivityStatus : NSInteger;

SWIFT_CLASS("_TtC11DatadogObjc29DDRUMViewEventRUMConnectivity")
@interface DDRUMViewEventRUMConnectivity : NSObject
@property (nonatomic, readonly, strong) DDRUMViewEventRUMConnectivityCellular * _Nullable cellular;
@property (nonatomic, readonly, copy) NSArray<NSNumber *> * _Nonnull interfaces;
@property (nonatomic, readonly) enum DDRUMViewEventRUMConnectivityStatus status;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc37DDRUMViewEventRUMConnectivityCellular")
@interface DDRUMViewEventRUMConnectivityCellular : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable carrierName;
@property (nonatomic, readonly, copy) NSString * _Nullable technology;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDRUMViewEventRUMConnectivityInterfaces, closed) {
  DDRUMViewEventRUMConnectivityInterfacesBluetooth = 0,
  DDRUMViewEventRUMConnectivityInterfacesCellular = 1,
  DDRUMViewEventRUMConnectivityInterfacesEthernet = 2,
  DDRUMViewEventRUMConnectivityInterfacesWifi = 3,
  DDRUMViewEventRUMConnectivityInterfacesWimax = 4,
  DDRUMViewEventRUMConnectivityInterfacesMixed = 5,
  DDRUMViewEventRUMConnectivityInterfacesOther = 6,
  DDRUMViewEventRUMConnectivityInterfacesUnknown = 7,
  DDRUMViewEventRUMConnectivityInterfacesNone = 8,
};

typedef SWIFT_ENUM(NSInteger, DDRUMViewEventRUMConnectivityStatus, closed) {
  DDRUMViewEventRUMConnectivityStatusConnected = 0,
  DDRUMViewEventRUMConnectivityStatusNotConnected = 1,
  DDRUMViewEventRUMConnectivityStatusMaybe = 2,
};


SWIFT_CLASS("_TtC11DatadogObjc21DDRUMViewEventRUMUser")
@interface DDRUMViewEventRUMUser : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable email;
@property (nonatomic, readonly, copy) NSString * _Nullable id;
@property (nonatomic, readonly, copy) NSString * _Nullable name;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum DDRUMViewEventSessionSessionType : NSInteger;

SWIFT_CLASS("_TtC11DatadogObjc21DDRUMViewEventSession")
@interface DDRUMViewEventSession : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nullable hasReplay;
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
@property (nonatomic, readonly) enum DDRUMViewEventSessionSessionType type;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDRUMViewEventSessionSessionType, closed) {
  DDRUMViewEventSessionSessionTypeUser = 0,
  DDRUMViewEventSessionSessionTypeSynthetics = 1,
};

@class DDRUMViewEventViewAction;
@class DDRUMViewEventViewCrash;
@class DDRUMViewEventViewError;
enum DDRUMViewEventViewLoadingType : NSInteger;
@class DDRUMViewEventViewLongTask;
@class DDRUMViewEventViewResource;

SWIFT_CLASS("_TtC11DatadogObjc18DDRUMViewEventView")
@interface DDRUMViewEventView : NSObject
@property (nonatomic, readonly, strong) DDRUMViewEventViewAction * _Nonnull action;
@property (nonatomic, readonly, strong) DDRUMViewEventViewCrash * _Nullable crash;
@property (nonatomic, readonly, strong) NSNumber * _Nullable cumulativeLayoutShift;
@property (nonatomic, readonly, copy) NSDictionary<NSString *, NSNumber *> * _Nullable customTimings;
@property (nonatomic, readonly, strong) NSNumber * _Nullable domComplete;
@property (nonatomic, readonly, strong) NSNumber * _Nullable domContentLoaded;
@property (nonatomic, readonly, strong) NSNumber * _Nullable domInteractive;
@property (nonatomic, readonly, strong) DDRUMViewEventViewError * _Nonnull error;
@property (nonatomic, readonly, strong) NSNumber * _Nullable firstContentfulPaint;
@property (nonatomic, readonly, strong) NSNumber * _Nullable firstInputDelay;
@property (nonatomic, readonly, strong) NSNumber * _Nullable firstInputTime;
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
@property (nonatomic, readonly, strong) NSNumber * _Nullable isActive;
@property (nonatomic, readonly, strong) NSNumber * _Nullable largestContentfulPaint;
@property (nonatomic, readonly, strong) NSNumber * _Nullable loadEvent;
@property (nonatomic, readonly, strong) NSNumber * _Nullable loadingTime;
@property (nonatomic, readonly) enum DDRUMViewEventViewLoadingType loadingType;
@property (nonatomic, readonly, strong) DDRUMViewEventViewLongTask * _Nullable longTask;
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, copy) NSString * _Nullable referrer;
@property (nonatomic, readonly, strong) DDRUMViewEventViewResource * _Nonnull resource;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull timeSpent;
@property (nonatomic, copy) NSString * _Nonnull url;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc24DDRUMViewEventViewAction")
@interface DDRUMViewEventViewAction : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nonnull count;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc23DDRUMViewEventViewCrash")
@interface DDRUMViewEventViewCrash : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nonnull count;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc23DDRUMViewEventViewError")
@interface DDRUMViewEventViewError : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nonnull count;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDRUMViewEventViewLoadingType, closed) {
  DDRUMViewEventViewLoadingTypeNone = 0,
  DDRUMViewEventViewLoadingTypeInitialLoad = 1,
  DDRUMViewEventViewLoadingTypeRouteChange = 2,
  DDRUMViewEventViewLoadingTypeActivityDisplay = 3,
  DDRUMViewEventViewLoadingTypeActivityRedisplay = 4,
  DDRUMViewEventViewLoadingTypeFragmentDisplay = 5,
  DDRUMViewEventViewLoadingTypeFragmentRedisplay = 6,
  DDRUMViewEventViewLoadingTypeViewControllerDisplay = 7,
  DDRUMViewEventViewLoadingTypeViewControllerRedisplay = 8,
};


SWIFT_CLASS("_TtC11DatadogObjc26DDRUMViewEventViewLongTask")
@interface DDRUMViewEventViewLongTask : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nonnull count;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc26DDRUMViewEventViewResource")
@interface DDRUMViewEventViewResource : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nonnull count;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDSDKVerbosityLevel, closed) {
  DDSDKVerbosityLevelNone = 0,
  DDSDKVerbosityLevelDebug = 1,
  DDSDKVerbosityLevelInfo = 2,
  DDSDKVerbosityLevelNotice = 3,
  DDSDKVerbosityLevelWarn = 4,
  DDSDKVerbosityLevelError = 5,
  DDSDKVerbosityLevelCritical = 6,
};

@protocol OTSpan;
@class NSDictionary;
@protocol OTSpanContext;

/// Corresponds to: https://github.com/opentracing/opentracing-objc/blob/master/Pod/Classes/OTTracer.h
SWIFT_PROTOCOL("_TtP11DatadogObjc8OTTracer_")
@protocol OTTracer
- (id <OTSpan> _Nonnull)startSpan:(NSString * _Nonnull)operationName SWIFT_WARN_UNUSED_RESULT;
- (id <OTSpan> _Nonnull)startSpan:(NSString * _Nonnull)operationName tags:(NSDictionary * _Nullable)tags SWIFT_WARN_UNUSED_RESULT;
- (id <OTSpan> _Nonnull)startSpan:(NSString * _Nonnull)operationName childOf:(id <OTSpanContext> _Nullable)parent SWIFT_WARN_UNUSED_RESULT;
- (id <OTSpan> _Nonnull)startSpan:(NSString * _Nonnull)operationName childOf:(id <OTSpanContext> _Nullable)parent tags:(NSDictionary * _Nullable)tags SWIFT_WARN_UNUSED_RESULT;
- (id <OTSpan> _Nonnull)startSpan:(NSString * _Nonnull)operationName childOf:(id <OTSpanContext> _Nullable)parent tags:(NSDictionary * _Nullable)tags startTime:(NSDate * _Nullable)startTime SWIFT_WARN_UNUSED_RESULT;
- (BOOL)inject:(id <OTSpanContext> _Nonnull)spanContext format:(NSString * _Nonnull)format carrier:(id _Nonnull)carrier error:(NSError * _Nullable * _Nullable)error;
- (BOOL)extractWithFormat:(NSString * _Nonnull)format carrier:(id _Nonnull)carrier error:(NSError * _Nullable * _Nullable)error;
@end

@class DDTracerConfiguration;

SWIFT_CLASS("_TtC11DatadogObjc8DDTracer")
@interface DDTracer : NSObject <OTTracer>
+ (id <OTTracer> _Nonnull)initializeWithConfiguration:(DDTracerConfiguration * _Nonnull)configuration SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED_MSG("Use `DDTracer(configuration:)`.");
- (nonnull instancetype)initWithConfiguration:(DDTracerConfiguration * _Nonnull)configuration;
- (id <OTSpan> _Nonnull)startSpan:(NSString * _Nonnull)operationName SWIFT_WARN_UNUSED_RESULT;
- (id <OTSpan> _Nonnull)startSpan:(NSString * _Nonnull)operationName tags:(NSDictionary * _Nullable)tags SWIFT_WARN_UNUSED_RESULT;
- (id <OTSpan> _Nonnull)startSpan:(NSString * _Nonnull)operationName childOf:(id <OTSpanContext> _Nullable)parent SWIFT_WARN_UNUSED_RESULT;
- (id <OTSpan> _Nonnull)startSpan:(NSString * _Nonnull)operationName childOf:(id <OTSpanContext> _Nullable)parent tags:(NSDictionary * _Nullable)tags SWIFT_WARN_UNUSED_RESULT;
- (id <OTSpan> _Nonnull)startSpan:(NSString * _Nonnull)operationName childOf:(id <OTSpanContext> _Nullable)parent tags:(NSDictionary * _Nullable)tags startTime:(NSDate * _Nullable)startTime SWIFT_WARN_UNUSED_RESULT;
- (BOOL)inject:(id <OTSpanContext> _Nonnull)spanContext format:(NSString * _Nonnull)format carrier:(id _Nonnull)carrier error:(NSError * _Nullable * _Nullable)error;
- (BOOL)extractWithFormat:(NSString * _Nonnull)format carrier:(id _Nonnull)carrier error:(NSError * _Nullable * _Nullable)error;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc21DDTracerConfiguration")
@interface DDTracerConfiguration : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (void)setWithServiceName:(NSString * _Nonnull)serviceName;
- (void)sendNetworkInfo:(BOOL)enabled;
@end


SWIFT_CLASS("_TtC11DatadogObjc16DDTracesEndpoint")
@interface DDTracesEndpoint : NSObject
+ (DDTracesEndpoint * _Nonnull)eu SWIFT_WARN_UNUSED_RESULT;
+ (DDTracesEndpoint * _Nonnull)us SWIFT_WARN_UNUSED_RESULT;
+ (DDTracesEndpoint * _Nonnull)gov SWIFT_WARN_UNUSED_RESULT;
+ (DDTracesEndpoint * _Nonnull)customWithUrl:(NSString * _Nonnull)url SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc17DDTrackingConsent")
@interface DDTrackingConsent : NSObject
+ (DDTrackingConsent * _Nonnull)granted SWIFT_WARN_UNUSED_RESULT;
+ (DDTrackingConsent * _Nonnull)notGranted SWIFT_WARN_UNUSED_RESULT;
+ (DDTrackingConsent * _Nonnull)pending SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_PROTOCOL("_TtP11DatadogObjc24DDUIKitRUMViewsPredicate_")
@protocol DDUIKitRUMViewsPredicate
/// The predicate deciding if the RUM View should be started or ended for given instance of the <code>UIViewController</code>.
/// \param viewController an instance of the view controller noticed by the SDK.
///
///
/// returns:
/// RUM View parameters if received view controller should start/end the RUM View, <code>nil</code> otherwise.
- (DDRUMView * _Nullable)rumViewFor:(UIViewController * _Nonnull)viewController SWIFT_WARN_UNUSED_RESULT;
@end

typedef SWIFT_ENUM(NSInteger, DDUploadFrequency, closed) {
  DDUploadFrequencyFrequent = 0,
  DDUploadFrequencyAverage = 1,
  DDUploadFrequencyRare = 2,
};


SWIFT_CLASS("_TtC11DatadogObjc2OT")
@interface OT : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull formatTextMap;)
+ (NSString * _Nonnull)formatTextMap SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class NSString;

/// Corresponds to: https://github.com/opentracing/opentracing-objc/blob/master/Pod/Classes/OTSpan.h
SWIFT_PROTOCOL("_TtP11DatadogObjc6OTSpan_")
@protocol OTSpan
@property (nonatomic, readonly, strong) id <OTSpanContext> _Nonnull context;
@property (nonatomic, readonly, strong) id <OTTracer> _Nonnull tracer;
- (void)setOperationName:(NSString * _Nonnull)operationName;
- (void)setTag:(NSString * _Nonnull)key value:(NSString * _Nonnull)value;
- (void)setTag:(NSString * _Nonnull)key numberValue:(NSNumber * _Nonnull)numberValue;
- (void)setTag:(NSString * _Nonnull)key boolValue:(BOOL)boolValue;
- (void)log:(NSDictionary<NSString *, NSObject *> * _Nonnull)fields;
- (void)log:(NSDictionary<NSString *, NSObject *> * _Nonnull)fields timestamp:(NSDate * _Nullable)timestamp;
- (id <OTSpan> _Nonnull)setBaggageItem:(NSString * _Nonnull)key value:(NSString * _Nonnull)value SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getBaggageItem:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
- (void)setError:(NSError * _Nonnull)error;
- (void)setErrorWithKind:(NSString * _Nonnull)kind message:(NSString * _Nonnull)message stack:(NSString * _Nullable)stack;
- (void)finish;
- (void)finishWithTime:(NSDate * _Nullable)finishTime;
- (id <OTSpan> _Nonnull)setActive;
@end


/// Corresponds to: https://github.com/opentracing/opentracing-objc/blob/master/Pod/Classes/OTSpanContext.h
SWIFT_PROTOCOL("_TtP11DatadogObjc13OTSpanContext_")
@protocol OTSpanContext
- (void)forEachBaggageItem:(SWIFT_NOESCAPE BOOL (^ _Nonnull)(NSString * _Nonnull, NSString * _Nonnull))callback;
@end


#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif

#elif defined(__x86_64__) && __x86_64__
// Generated by Apple Swift version 5.3.2 (swiftlang-1200.0.45 clang-1200.0.32.28)
#ifndef DATADOGOBJC_SWIFT_H
#define DATADOGOBJC_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import Datadog;
@import Foundation;
@import ObjectiveC;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="DatadogObjc",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

@class NSBundle;

SWIFT_CLASS("_TtC11DatadogObjc12DDAppContext")
@interface DDAppContext : NSObject
- (nonnull instancetype)initWithMainBundle:(NSBundle * _Nonnull)mainBundle OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM(NSInteger, DDBatchSize, closed) {
  DDBatchSizeSmall = 0,
  DDBatchSizeMedium = 1,
  DDBatchSizeLarge = 2,
};

@class DDConfigurationBuilder;

SWIFT_CLASS("_TtC11DatadogObjc15DDConfiguration")
@interface DDConfiguration : NSObject
+ (DDConfigurationBuilder * _Nonnull)builderWithClientToken:(NSString * _Nonnull)clientToken environment:(NSString * _Nonnull)environment SWIFT_WARN_UNUSED_RESULT;
+ (DDConfigurationBuilder * _Nonnull)builderWithRumApplicationID:(NSString * _Nonnull)rumApplicationID clientToken:(NSString * _Nonnull)clientToken environment:(NSString * _Nonnull)environment SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class DDEndpoint;
@class DDLogsEndpoint;
@class DDTracesEndpoint;
@protocol DDUIKitRUMViewsPredicate;
@class DDRUMViewEvent;
@class DDRUMResourceEvent;
@class DDRUMActionEvent;
@class DDRUMErrorEvent;
enum DDUploadFrequency : NSInteger;

SWIFT_CLASS("_TtC11DatadogObjc22DDConfigurationBuilder")
@interface DDConfigurationBuilder : NSObject
- (void)enableLogging:(BOOL)enabled;
- (void)enableTracing:(BOOL)enabled;
- (void)enableRUM:(BOOL)enabled;
- (void)setWithEndpoint:(DDEndpoint * _Nonnull)endpoint;
- (void)setWithCustomLogsEndpoint:(NSURL * _Nonnull)customLogsEndpoint;
- (void)setWithCustomTracesEndpoint:(NSURL * _Nonnull)customTracesEndpoint;
- (void)setWithCustomRUMEndpoint:(NSURL * _Nonnull)customRUMEndpoint;
- (void)setWithLogsEndpoint:(DDLogsEndpoint * _Nonnull)logsEndpoint SWIFT_DEPRECATED_MSG("This option is replaced by `set(endpoint:)`. Refer to the new API comment for details.");
- (void)setWithTracesEndpoint:(DDTracesEndpoint * _Nonnull)tracesEndpoint SWIFT_DEPRECATED_MSG("This option is replaced by `set(endpoint:)`. Refer to the new API comment for details.");
- (void)setWithTracedHosts:(NSSet<NSString *> * _Nonnull)tracedHosts SWIFT_DEPRECATED_MSG("This option is replaced by `trackURLSession(firstPartyHosts:)`. Refer to the new API comment for important details.");
- (void)trackWithFirstPartyHosts:(NSSet<NSString *> * _Nonnull)firstPartyHosts SWIFT_DEPRECATED_MSG("This option is replaced by `trackURLSession(firstPartyHosts:)`. Refer to the new API comment for important details.");
- (void)trackURLSessionWithFirstPartyHosts:(NSSet<NSString *> * _Nonnull)firstPartyHosts;
- (void)setWithServiceName:(NSString * _Nonnull)serviceName;
- (void)setWithRumSessionsSamplingRate:(float)rumSessionsSamplingRate;
- (void)trackUIKitRUMViews;
- (void)trackUIKitRUMViewsUsing:(id <DDUIKitRUMViewsPredicate> _Nonnull)predicate;
- (void)trackUIKitActions;
- (void)setRUMViewEventMapper:(DDRUMViewEvent * _Nullable (^ _Nonnull)(DDRUMViewEvent * _Nonnull))mapper;
- (void)setRUMResourceEventMapper:(DDRUMResourceEvent * _Nullable (^ _Nonnull)(DDRUMResourceEvent * _Nonnull))mapper;
- (void)setRUMActionEventMapper:(DDRUMActionEvent * _Nullable (^ _Nonnull)(DDRUMActionEvent * _Nonnull))mapper;
- (void)setRUMErrorEventMapper:(DDRUMErrorEvent * _Nullable (^ _Nonnull)(DDRUMErrorEvent * _Nonnull))mapper;
- (void)setWithBatchSize:(enum DDBatchSize)batchSize;
- (void)setWithUploadFrequency:(enum DDUploadFrequency)uploadFrequency;
- (void)setWithAdditionalConfiguration:(NSDictionary<NSString *, id> * _Nonnull)additionalConfiguration;
- (DDConfiguration * _Nonnull)build SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class DDTrackingConsent;
enum DDSDKVerbosityLevel : NSInteger;

SWIFT_CLASS("_TtC11DatadogObjc9DDDatadog")
@interface DDDatadog : NSObject
+ (void)initializeWithAppContext:(DDAppContext * _Nonnull)appContext configuration:(DDConfiguration * _Nonnull)configuration SWIFT_DEPRECATED_MSG("\n    This method is deprecated and uses the `DDTrackingConsent.granted()` value as a default privacy consent.\n    This means that the SDK will start recording and sending data immediately after initialisation without waiting for the user's consent to be given.\n\n    Use `DDDatadog.initialize(appContext:trackingConsent:configuration:)` and set consent to `granted()` to preserve previous behaviour.\n    ");
+ (void)initializeWithAppContext:(DDAppContext * _Nonnull)appContext trackingConsent:(DDTrackingConsent * _Nonnull)trackingConsent configuration:(DDConfiguration * _Nonnull)configuration;
+ (void)setVerbosityLevel:(enum DDSDKVerbosityLevel)verbosityLevel;
+ (enum DDSDKVerbosityLevel)verbosityLevel SWIFT_WARN_UNUSED_RESULT;
+ (void)setUserInfoWithId:(NSString * _Nullable)id name:(NSString * _Nullable)name email:(NSString * _Nullable)email;
+ (void)setTrackingConsentWithConsent:(DDTrackingConsent * _Nonnull)consent;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC11DatadogObjc10DDEndpoint")
@interface DDEndpoint : NSObject
+ (DDEndpoint * _Nonnull)eu SWIFT_WARN_UNUSED_RESULT;
+ (DDEndpoint * _Nonnull)us SWIFT_WARN_UNUSED_RESULT;
+ (DDEndpoint * _Nonnull)gov SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class DDTracer;
@class DDRUMMonitor;

SWIFT_CLASS("_TtC11DatadogObjc8DDGlobal")
@interface DDGlobal : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) DDTracer * _Nonnull sharedTracer;)
+ (DDTracer * _Nonnull)sharedTracer SWIFT_WARN_UNUSED_RESULT;
+ (void)setSharedTracer:(DDTracer * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) DDRUMMonitor * _Nonnull rum;)
+ (DDRUMMonitor * _Nonnull)rum SWIFT_WARN_UNUSED_RESULT;
+ (void)setRum:(DDRUMMonitor * _Nonnull)value;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC11DatadogObjc19DDHTTPHeadersWriter")
@interface DDHTTPHeadersWriter : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class NSError;
@class DDLoggerBuilder;

SWIFT_CLASS("_TtC11DatadogObjc8DDLogger")
@interface DDLogger : NSObject
- (void)debug:(NSString * _Nonnull)message;
- (void)debug:(NSString * _Nonnull)message attributes:(NSDictionary<NSString *, id> * _Nonnull)attributes;
- (void)debug:(NSString * _Nonnull)message error:(NSError * _Nonnull)error attributes:(NSDictionary<NSString *, id> * _Nonnull)attributes;
- (void)info:(NSString * _Nonnull)message;
- (void)info:(NSString * _Nonnull)message attributes:(NSDictionary<NSString *, id> * _Nonnull)attributes;
- (void)info:(NSString * _Nonnull)message error:(NSError * _Nonnull)error attributes:(NSDictionary<NSString *, id> * _Nonnull)attributes;
- (void)notice:(NSString * _Nonnull)message;
- (void)notice:(NSString * _Nonnull)message attributes:(NSDictionary<NSString *, id> * _Nonnull)attributes;
- (void)notice:(NSString * _Nonnull)message error:(NSError * _Nonnull)error attributes:(NSDictionary<NSString *, id> * _Nonnull)attributes;
- (void)warn:(NSString * _Nonnull)message;
- (void)warn:(NSString * _Nonnull)message attributes:(NSDictionary<NSString *, id> * _Nonnull)attributes;
- (void)warn:(NSString * _Nonnull)message error:(NSError * _Nonnull)error attributes:(NSDictionary<NSString *, id> * _Nonnull)attributes;
- (void)error:(NSString * _Nonnull)message;
- (void)error:(NSString * _Nonnull)message attributes:(NSDictionary<NSString *, id> * _Nonnull)attributes;
- (void)error:(NSString * _Nonnull)message error:(NSError * _Nonnull)error attributes:(NSDictionary<NSString *, id> * _Nonnull)attributes;
- (void)critical:(NSString * _Nonnull)message;
- (void)critical:(NSString * _Nonnull)message attributes:(NSDictionary<NSString *, id> * _Nonnull)attributes;
- (void)critical:(NSString * _Nonnull)message error:(NSError * _Nonnull)error attributes:(NSDictionary<NSString *, id> * _Nonnull)attributes;
- (void)addAttributeForKey:(NSString * _Nonnull)key value:(id _Nonnull)value;
- (void)removeAttributeForKey:(NSString * _Nonnull)key;
- (void)addTagWithKey:(NSString * _Nonnull)key value:(NSString * _Nonnull)value;
- (void)removeTagWithKey:(NSString * _Nonnull)key;
- (void)addWithTag:(NSString * _Nonnull)tag;
- (void)removeWithTag:(NSString * _Nonnull)tag;
+ (DDLoggerBuilder * _Nonnull)builder SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc15DDLoggerBuilder")
@interface DDLoggerBuilder : NSObject
- (void)setWithServiceName:(NSString * _Nonnull)serviceName;
- (void)setWithLoggerName:(NSString * _Nonnull)loggerName;
- (void)sendNetworkInfo:(BOOL)enabled;
- (void)sendLogsToDatadog:(BOOL)enabled;
- (void)printLogsToConsole:(BOOL)enabled;
- (DDLogger * _Nonnull)build SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc14DDLogsEndpoint")
@interface DDLogsEndpoint : NSObject
+ (DDLogsEndpoint * _Nonnull)eu SWIFT_WARN_UNUSED_RESULT;
+ (DDLogsEndpoint * _Nonnull)us SWIFT_WARN_UNUSED_RESULT;
+ (DDLogsEndpoint * _Nonnull)gov SWIFT_WARN_UNUSED_RESULT;
+ (DDLogsEndpoint * _Nonnull)customWithUrl:(NSString * _Nonnull)url SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc22DDNSURLSessionDelegate")
@interface DDNSURLSessionDelegate : DDURLSessionDelegate
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithAdditionalFirstPartyHosts:(NSSet<NSString *> * _Nonnull)additionalFirstPartyHosts OBJC_DESIGNATED_INITIALIZER;
@end

@class DDRUMActionEventDD;
@class DDRUMActionEventAction;
@class DDRUMActionEventApplication;
@class DDRUMActionEventRUMConnectivity;
@class NSNumber;
@class DDRUMActionEventSession;
@class DDRUMActionEventRUMUser;
@class DDRUMActionEventView;

SWIFT_CLASS("_TtC11DatadogObjc16DDRUMActionEvent")
@interface DDRUMActionEvent : NSObject
@property (nonatomic, readonly, strong) DDRUMActionEventDD * _Nonnull dd;
@property (nonatomic, readonly, strong) DDRUMActionEventAction * _Nonnull action;
@property (nonatomic, readonly, strong) DDRUMActionEventApplication * _Nonnull application;
@property (nonatomic, readonly, strong) DDRUMActionEventRUMConnectivity * _Nullable connectivity;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull date;
@property (nonatomic, readonly, copy) NSString * _Nullable service;
@property (nonatomic, readonly, strong) DDRUMActionEventSession * _Nonnull session;
@property (nonatomic, readonly, copy) NSString * _Nonnull type;
@property (nonatomic, readonly, strong) DDRUMActionEventRUMUser * _Nullable usr;
@property (nonatomic, readonly, strong) DDRUMActionEventView * _Nonnull view;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class DDRUMActionEventActionCrash;
@class DDRUMActionEventActionError;
@class DDRUMActionEventActionLongTask;
@class DDRUMActionEventActionResource;
@class DDRUMActionEventActionTarget;
enum DDRUMActionEventActionActionType : NSInteger;

SWIFT_CLASS("_TtC11DatadogObjc22DDRUMActionEventAction")
@interface DDRUMActionEventAction : NSObject
@property (nonatomic, readonly, strong) DDRUMActionEventActionCrash * _Nullable crash;
@property (nonatomic, readonly, strong) DDRUMActionEventActionError * _Nullable error;
@property (nonatomic, readonly, copy) NSString * _Nullable id;
@property (nonatomic, readonly, strong) NSNumber * _Nullable loadingTime;
@property (nonatomic, readonly, strong) DDRUMActionEventActionLongTask * _Nullable longTask;
@property (nonatomic, readonly, strong) DDRUMActionEventActionResource * _Nullable resource;
@property (nonatomic, readonly, strong) DDRUMActionEventActionTarget * _Nullable target;
@property (nonatomic, readonly) enum DDRUMActionEventActionActionType type;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDRUMActionEventActionActionType, closed) {
  DDRUMActionEventActionActionTypeCustom = 0,
  DDRUMActionEventActionActionTypeClick = 1,
  DDRUMActionEventActionActionTypeTap = 2,
  DDRUMActionEventActionActionTypeScroll = 3,
  DDRUMActionEventActionActionTypeSwipe = 4,
  DDRUMActionEventActionActionTypeApplicationStart = 5,
  DDRUMActionEventActionActionTypeBack = 6,
};


SWIFT_CLASS("_TtC11DatadogObjc27DDRUMActionEventActionCrash")
@interface DDRUMActionEventActionCrash : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nonnull count;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc27DDRUMActionEventActionError")
@interface DDRUMActionEventActionError : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nonnull count;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc30DDRUMActionEventActionLongTask")
@interface DDRUMActionEventActionLongTask : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nonnull count;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc30DDRUMActionEventActionResource")
@interface DDRUMActionEventActionResource : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nonnull count;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc28DDRUMActionEventActionTarget")
@interface DDRUMActionEventActionTarget : NSObject
@property (nonatomic, copy) NSString * _Nonnull name;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc27DDRUMActionEventApplication")
@interface DDRUMActionEventApplication : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc18DDRUMActionEventDD")
@interface DDRUMActionEventDD : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nonnull formatVersion;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class DDRUMActionEventRUMConnectivityCellular;
enum DDRUMActionEventRUMConnectivityStatus : NSInteger;

SWIFT_CLASS("_TtC11DatadogObjc31DDRUMActionEventRUMConnectivity")
@interface DDRUMActionEventRUMConnectivity : NSObject
@property (nonatomic, readonly, strong) DDRUMActionEventRUMConnectivityCellular * _Nullable cellular;
@property (nonatomic, readonly, copy) NSArray<NSNumber *> * _Nonnull interfaces;
@property (nonatomic, readonly) enum DDRUMActionEventRUMConnectivityStatus status;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc39DDRUMActionEventRUMConnectivityCellular")
@interface DDRUMActionEventRUMConnectivityCellular : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable carrierName;
@property (nonatomic, readonly, copy) NSString * _Nullable technology;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDRUMActionEventRUMConnectivityInterfaces, closed) {
  DDRUMActionEventRUMConnectivityInterfacesBluetooth = 0,
  DDRUMActionEventRUMConnectivityInterfacesCellular = 1,
  DDRUMActionEventRUMConnectivityInterfacesEthernet = 2,
  DDRUMActionEventRUMConnectivityInterfacesWifi = 3,
  DDRUMActionEventRUMConnectivityInterfacesWimax = 4,
  DDRUMActionEventRUMConnectivityInterfacesMixed = 5,
  DDRUMActionEventRUMConnectivityInterfacesOther = 6,
  DDRUMActionEventRUMConnectivityInterfacesUnknown = 7,
  DDRUMActionEventRUMConnectivityInterfacesNone = 8,
};

typedef SWIFT_ENUM(NSInteger, DDRUMActionEventRUMConnectivityStatus, closed) {
  DDRUMActionEventRUMConnectivityStatusConnected = 0,
  DDRUMActionEventRUMConnectivityStatusNotConnected = 1,
  DDRUMActionEventRUMConnectivityStatusMaybe = 2,
};


SWIFT_CLASS("_TtC11DatadogObjc23DDRUMActionEventRUMUser")
@interface DDRUMActionEventRUMUser : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable email;
@property (nonatomic, readonly, copy) NSString * _Nullable id;
@property (nonatomic, readonly, copy) NSString * _Nullable name;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum DDRUMActionEventSessionSessionType : NSInteger;

SWIFT_CLASS("_TtC11DatadogObjc23DDRUMActionEventSession")
@interface DDRUMActionEventSession : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nullable hasReplay;
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
@property (nonatomic, readonly) enum DDRUMActionEventSessionSessionType type;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDRUMActionEventSessionSessionType, closed) {
  DDRUMActionEventSessionSessionTypeUser = 0,
  DDRUMActionEventSessionSessionTypeSynthetics = 1,
};


SWIFT_CLASS("_TtC11DatadogObjc20DDRUMActionEventView")
@interface DDRUMActionEventView : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, copy) NSString * _Nullable referrer;
@property (nonatomic, copy) NSString * _Nonnull url;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class DDRUMErrorEventDD;
@class DDRUMErrorEventAction;
@class DDRUMErrorEventApplication;
@class DDRUMErrorEventRUMConnectivity;
@class DDRUMErrorEventError;
@class DDRUMErrorEventSession;
@class DDRUMErrorEventRUMUser;
@class DDRUMErrorEventView;

SWIFT_CLASS("_TtC11DatadogObjc15DDRUMErrorEvent")
@interface DDRUMErrorEvent : NSObject
@property (nonatomic, readonly, strong) DDRUMErrorEventDD * _Nonnull dd;
@property (nonatomic, readonly, strong) DDRUMErrorEventAction * _Nullable action;
@property (nonatomic, readonly, strong) DDRUMErrorEventApplication * _Nonnull application;
@property (nonatomic, readonly, strong) DDRUMErrorEventRUMConnectivity * _Nullable connectivity;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull date;
@property (nonatomic, readonly, strong) DDRUMErrorEventError * _Nonnull error;
@property (nonatomic, readonly, copy) NSString * _Nullable service;
@property (nonatomic, readonly, strong) DDRUMErrorEventSession * _Nonnull session;
@property (nonatomic, readonly, copy) NSString * _Nonnull type;
@property (nonatomic, readonly, strong) DDRUMErrorEventRUMUser * _Nullable usr;
@property (nonatomic, readonly, strong) DDRUMErrorEventView * _Nonnull view;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc21DDRUMErrorEventAction")
@interface DDRUMErrorEventAction : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc26DDRUMErrorEventApplication")
@interface DDRUMErrorEventApplication : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc17DDRUMErrorEventDD")
@interface DDRUMErrorEventDD : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nonnull formatVersion;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class DDRUMErrorEventErrorResource;
enum DDRUMErrorEventErrorSource : NSInteger;

SWIFT_CLASS("_TtC11DatadogObjc20DDRUMErrorEventError")
@interface DDRUMErrorEventError : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nullable isCrash;
@property (nonatomic, copy) NSString * _Nonnull message;
@property (nonatomic, readonly, strong) DDRUMErrorEventErrorResource * _Nullable resource;
@property (nonatomic, readonly) enum DDRUMErrorEventErrorSource source;
@property (nonatomic, copy) NSString * _Nullable stack;
@property (nonatomic, readonly, copy) NSString * _Nullable type;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum DDRUMErrorEventErrorResourceRUMMethod : NSInteger;
@class DDRUMErrorEventErrorResourceProvider;

SWIFT_CLASS("_TtC11DatadogObjc28DDRUMErrorEventErrorResource")
@interface DDRUMErrorEventErrorResource : NSObject
@property (nonatomic, readonly) enum DDRUMErrorEventErrorResourceRUMMethod method;
@property (nonatomic, readonly, strong) DDRUMErrorEventErrorResourceProvider * _Nullable provider;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull statusCode;
@property (nonatomic, copy) NSString * _Nonnull url;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum DDRUMErrorEventErrorResourceProviderProviderType : NSInteger;

SWIFT_CLASS("_TtC11DatadogObjc36DDRUMErrorEventErrorResourceProvider")
@interface DDRUMErrorEventErrorResourceProvider : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable domain;
@property (nonatomic, readonly, copy) NSString * _Nullable name;
@property (nonatomic, readonly) enum DDRUMErrorEventErrorResourceProviderProviderType type;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDRUMErrorEventErrorResourceProviderProviderType, closed) {
  DDRUMErrorEventErrorResourceProviderProviderTypeNone = 0,
  DDRUMErrorEventErrorResourceProviderProviderTypeAd = 1,
  DDRUMErrorEventErrorResourceProviderProviderTypeAdvertising = 2,
  DDRUMErrorEventErrorResourceProviderProviderTypeAnalytics = 3,
  DDRUMErrorEventErrorResourceProviderProviderTypeCdn = 4,
  DDRUMErrorEventErrorResourceProviderProviderTypeContent = 5,
  DDRUMErrorEventErrorResourceProviderProviderTypeCustomerSuccess = 6,
  DDRUMErrorEventErrorResourceProviderProviderTypeFirstParty = 7,
  DDRUMErrorEventErrorResourceProviderProviderTypeHosting = 8,
  DDRUMErrorEventErrorResourceProviderProviderTypeMarketing = 9,
  DDRUMErrorEventErrorResourceProviderProviderTypeOther = 10,
  DDRUMErrorEventErrorResourceProviderProviderTypeSocial = 11,
  DDRUMErrorEventErrorResourceProviderProviderTypeTagManager = 12,
  DDRUMErrorEventErrorResourceProviderProviderTypeUtility = 13,
  DDRUMErrorEventErrorResourceProviderProviderTypeVideo = 14,
};

typedef SWIFT_ENUM(NSInteger, DDRUMErrorEventErrorResourceRUMMethod, closed) {
  DDRUMErrorEventErrorResourceRUMMethodPost = 0,
  DDRUMErrorEventErrorResourceRUMMethodGet = 1,
  DDRUMErrorEventErrorResourceRUMMethodHead = 2,
  DDRUMErrorEventErrorResourceRUMMethodPut = 3,
  DDRUMErrorEventErrorResourceRUMMethodDelete = 4,
  DDRUMErrorEventErrorResourceRUMMethodPatch = 5,
};

typedef SWIFT_ENUM(NSInteger, DDRUMErrorEventErrorSource, closed) {
  DDRUMErrorEventErrorSourceNetwork = 0,
  DDRUMErrorEventErrorSourceSource = 1,
  DDRUMErrorEventErrorSourceConsole = 2,
  DDRUMErrorEventErrorSourceLogger = 3,
  DDRUMErrorEventErrorSourceAgent = 4,
  DDRUMErrorEventErrorSourceWebview = 5,
  DDRUMErrorEventErrorSourceCustom = 6,
};

@class DDRUMErrorEventRUMConnectivityCellular;
enum DDRUMErrorEventRUMConnectivityStatus : NSInteger;

SWIFT_CLASS("_TtC11DatadogObjc30DDRUMErrorEventRUMConnectivity")
@interface DDRUMErrorEventRUMConnectivity : NSObject
@property (nonatomic, readonly, strong) DDRUMErrorEventRUMConnectivityCellular * _Nullable cellular;
@property (nonatomic, readonly, copy) NSArray<NSNumber *> * _Nonnull interfaces;
@property (nonatomic, readonly) enum DDRUMErrorEventRUMConnectivityStatus status;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc38DDRUMErrorEventRUMConnectivityCellular")
@interface DDRUMErrorEventRUMConnectivityCellular : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable carrierName;
@property (nonatomic, readonly, copy) NSString * _Nullable technology;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDRUMErrorEventRUMConnectivityInterfaces, closed) {
  DDRUMErrorEventRUMConnectivityInterfacesBluetooth = 0,
  DDRUMErrorEventRUMConnectivityInterfacesCellular = 1,
  DDRUMErrorEventRUMConnectivityInterfacesEthernet = 2,
  DDRUMErrorEventRUMConnectivityInterfacesWifi = 3,
  DDRUMErrorEventRUMConnectivityInterfacesWimax = 4,
  DDRUMErrorEventRUMConnectivityInterfacesMixed = 5,
  DDRUMErrorEventRUMConnectivityInterfacesOther = 6,
  DDRUMErrorEventRUMConnectivityInterfacesUnknown = 7,
  DDRUMErrorEventRUMConnectivityInterfacesNone = 8,
};

typedef SWIFT_ENUM(NSInteger, DDRUMErrorEventRUMConnectivityStatus, closed) {
  DDRUMErrorEventRUMConnectivityStatusConnected = 0,
  DDRUMErrorEventRUMConnectivityStatusNotConnected = 1,
  DDRUMErrorEventRUMConnectivityStatusMaybe = 2,
};


SWIFT_CLASS("_TtC11DatadogObjc22DDRUMErrorEventRUMUser")
@interface DDRUMErrorEventRUMUser : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable email;
@property (nonatomic, readonly, copy) NSString * _Nullable id;
@property (nonatomic, readonly, copy) NSString * _Nullable name;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum DDRUMErrorEventSessionSessionType : NSInteger;

SWIFT_CLASS("_TtC11DatadogObjc22DDRUMErrorEventSession")
@interface DDRUMErrorEventSession : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nullable hasReplay;
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
@property (nonatomic, readonly) enum DDRUMErrorEventSessionSessionType type;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDRUMErrorEventSessionSessionType, closed) {
  DDRUMErrorEventSessionSessionTypeUser = 0,
  DDRUMErrorEventSessionSessionTypeSynthetics = 1,
};


SWIFT_CLASS("_TtC11DatadogObjc19DDRUMErrorEventView")
@interface DDRUMErrorEventView : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, copy) NSString * _Nullable referrer;
@property (nonatomic, copy) NSString * _Nonnull url;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDRUMErrorSource, closed) {
/// Error originated in the source code.
  DDRUMErrorSourceSource = 0,
/// Error originated in the network layer.
  DDRUMErrorSourceNetwork = 1,
/// Error originated in a webview.
  DDRUMErrorSourceWebview = 2,
/// Custom error source.
  DDRUMErrorSourceCustom = 3,
};

typedef SWIFT_ENUM(NSInteger, DDRUMMethod, closed) {
  DDRUMMethodPost = 0,
  DDRUMMethodGet = 1,
  DDRUMMethodHead = 2,
  DDRUMMethodPut = 3,
  DDRUMMethodDelete = 4,
  DDRUMMethodPatch = 5,
};

@class UIViewController;
@class NSURLSessionTaskMetrics;
@class NSURLResponse;
enum DDRUMResourceType : NSInteger;
enum DDRUMUserActionType : NSInteger;

SWIFT_CLASS("_TtC11DatadogObjc12DDRUMMonitor")
@interface DDRUMMonitor : NSObject
- (nonnull instancetype)init;
- (void)startViewWithViewController:(UIViewController * _Nonnull)viewController path:(NSString * _Nullable)path attributes:(NSDictionary<NSString *, id> * _Nonnull)attributes;
- (void)stopViewWithViewController:(UIViewController * _Nonnull)viewController attributes:(NSDictionary<NSString *, id> * _Nonnull)attributes;
- (void)startViewWithKey:(NSString * _Nonnull)key path:(NSString * _Nullable)path attributes:(NSDictionary<NSString *, id> * _Nonnull)attributes;
- (void)stopViewWithKey:(NSString * _Nonnull)key attributes:(NSDictionary<NSString *, id> * _Nonnull)attributes;
- (void)addTimingWithName:(NSString * _Nonnull)name;
- (void)addErrorWithMessage:(NSString * _Nonnull)message source:(enum DDRUMErrorSource)source stack:(NSString * _Nullable)stack attributes:(NSDictionary<NSString *, id> * _Nonnull)attributes;
- (void)addErrorWithError:(NSError * _Nonnull)error source:(enum DDRUMErrorSource)source attributes:(NSDictionary<NSString *, id> * _Nonnull)attributes;
- (void)startResourceLoadingWithResourceKey:(NSString * _Nonnull)resourceKey request:(NSURLRequest * _Nonnull)request attributes:(NSDictionary<NSString *, id> * _Nonnull)attributes;
- (void)startResourceLoadingWithResourceKey:(NSString * _Nonnull)resourceKey url:(NSURL * _Nonnull)url attributes:(NSDictionary<NSString *, id> * _Nonnull)attributes;
- (void)startResourceLoadingWithResourceKey:(NSString * _Nonnull)resourceKey httpMethod:(enum DDRUMMethod)httpMethod urlString:(NSString * _Nonnull)urlString attributes:(NSDictionary<NSString *, id> * _Nonnull)attributes;
- (void)addResourceMetricsWithResourceKey:(NSString * _Nonnull)resourceKey metrics:(NSURLSessionTaskMetrics * _Nonnull)metrics attributes:(NSDictionary<NSString *, id> * _Nonnull)attributes;
- (void)stopResourceLoadingWithResourceKey:(NSString * _Nonnull)resourceKey response:(NSURLResponse * _Nonnull)response size:(NSNumber * _Nullable)size attributes:(NSDictionary<NSString *, id> * _Nonnull)attributes;
- (void)stopResourceLoadingWithResourceKey:(NSString * _Nonnull)resourceKey statusCode:(NSNumber * _Nullable)statusCode kind:(enum DDRUMResourceType)kind size:(NSNumber * _Nullable)size attributes:(NSDictionary<NSString *, id> * _Nonnull)attributes;
- (void)stopResourceLoadingWithErrorWithResourceKey:(NSString * _Nonnull)resourceKey error:(NSError * _Nonnull)error response:(NSURLResponse * _Nullable)response attributes:(NSDictionary<NSString *, id> * _Nonnull)attributes;
- (void)stopResourceLoadingWithErrorWithResourceKey:(NSString * _Nonnull)resourceKey errorMessage:(NSString * _Nonnull)errorMessage response:(NSURLResponse * _Nullable)response attributes:(NSDictionary<NSString *, id> * _Nonnull)attributes;
- (void)startUserActionWithType:(enum DDRUMUserActionType)type name:(NSString * _Nonnull)name attributes:(NSDictionary<NSString *, id> * _Nonnull)attributes;
- (void)stopUserActionWithType:(enum DDRUMUserActionType)type name:(NSString * _Nullable)name attributes:(NSDictionary<NSString *, id> * _Nonnull)attributes;
- (void)addUserActionWithType:(enum DDRUMUserActionType)type name:(NSString * _Nonnull)name attributes:(NSDictionary<NSString *, id> * _Nonnull)attributes;
- (void)addAttributeForKey:(NSString * _Nonnull)key value:(id _Nonnull)value;
- (void)removeAttributeForKey:(NSString * _Nonnull)key;
@end

@class DDRUMResourceEventDD;
@class DDRUMResourceEventAction;
@class DDRUMResourceEventApplication;
@class DDRUMResourceEventRUMConnectivity;
@class DDRUMResourceEventResource;
@class DDRUMResourceEventSession;
@class DDRUMResourceEventRUMUser;
@class DDRUMResourceEventView;

SWIFT_CLASS("_TtC11DatadogObjc18DDRUMResourceEvent")
@interface DDRUMResourceEvent : NSObject
@property (nonatomic, readonly, strong) DDRUMResourceEventDD * _Nonnull dd;
@property (nonatomic, readonly, strong) DDRUMResourceEventAction * _Nullable action;
@property (nonatomic, readonly, strong) DDRUMResourceEventApplication * _Nonnull application;
@property (nonatomic, readonly, strong) DDRUMResourceEventRUMConnectivity * _Nullable connectivity;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull date;
@property (nonatomic, readonly, strong) DDRUMResourceEventResource * _Nonnull resource;
@property (nonatomic, readonly, copy) NSString * _Nullable service;
@property (nonatomic, readonly, strong) DDRUMResourceEventSession * _Nonnull session;
@property (nonatomic, readonly, copy) NSString * _Nonnull type;
@property (nonatomic, readonly, strong) DDRUMResourceEventRUMUser * _Nullable usr;
@property (nonatomic, readonly, strong) DDRUMResourceEventView * _Nonnull view;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc24DDRUMResourceEventAction")
@interface DDRUMResourceEventAction : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc29DDRUMResourceEventApplication")
@interface DDRUMResourceEventApplication : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc20DDRUMResourceEventDD")
@interface DDRUMResourceEventDD : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nonnull formatVersion;
@property (nonatomic, readonly, copy) NSString * _Nullable spanId;
@property (nonatomic, readonly, copy) NSString * _Nullable traceId;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class DDRUMResourceEventRUMConnectivityCellular;
enum DDRUMResourceEventRUMConnectivityStatus : NSInteger;

SWIFT_CLASS("_TtC11DatadogObjc33DDRUMResourceEventRUMConnectivity")
@interface DDRUMResourceEventRUMConnectivity : NSObject
@property (nonatomic, readonly, strong) DDRUMResourceEventRUMConnectivityCellular * _Nullable cellular;
@property (nonatomic, readonly, copy) NSArray<NSNumber *> * _Nonnull interfaces;
@property (nonatomic, readonly) enum DDRUMResourceEventRUMConnectivityStatus status;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc41DDRUMResourceEventRUMConnectivityCellular")
@interface DDRUMResourceEventRUMConnectivityCellular : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable carrierName;
@property (nonatomic, readonly, copy) NSString * _Nullable technology;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDRUMResourceEventRUMConnectivityInterfaces, closed) {
  DDRUMResourceEventRUMConnectivityInterfacesBluetooth = 0,
  DDRUMResourceEventRUMConnectivityInterfacesCellular = 1,
  DDRUMResourceEventRUMConnectivityInterfacesEthernet = 2,
  DDRUMResourceEventRUMConnectivityInterfacesWifi = 3,
  DDRUMResourceEventRUMConnectivityInterfacesWimax = 4,
  DDRUMResourceEventRUMConnectivityInterfacesMixed = 5,
  DDRUMResourceEventRUMConnectivityInterfacesOther = 6,
  DDRUMResourceEventRUMConnectivityInterfacesUnknown = 7,
  DDRUMResourceEventRUMConnectivityInterfacesNone = 8,
};

typedef SWIFT_ENUM(NSInteger, DDRUMResourceEventRUMConnectivityStatus, closed) {
  DDRUMResourceEventRUMConnectivityStatusConnected = 0,
  DDRUMResourceEventRUMConnectivityStatusNotConnected = 1,
  DDRUMResourceEventRUMConnectivityStatusMaybe = 2,
};


SWIFT_CLASS("_TtC11DatadogObjc25DDRUMResourceEventRUMUser")
@interface DDRUMResourceEventRUMUser : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable email;
@property (nonatomic, readonly, copy) NSString * _Nullable id;
@property (nonatomic, readonly, copy) NSString * _Nullable name;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class DDRUMResourceEventResourceConnect;
@class DDRUMResourceEventResourceDNS;
@class DDRUMResourceEventResourceDownload;
@class DDRUMResourceEventResourceFirstByte;
enum DDRUMResourceEventResourceRUMMethod : NSInteger;
@class DDRUMResourceEventResourceProvider;
@class DDRUMResourceEventResourceRedirect;
@class DDRUMResourceEventResourceSSL;
enum DDRUMResourceEventResourceResourceType : NSInteger;

SWIFT_CLASS("_TtC11DatadogObjc26DDRUMResourceEventResource")
@interface DDRUMResourceEventResource : NSObject
@property (nonatomic, readonly, strong) DDRUMResourceEventResourceConnect * _Nullable connect;
@property (nonatomic, readonly, strong) DDRUMResourceEventResourceDNS * _Nullable dns;
@property (nonatomic, readonly, strong) DDRUMResourceEventResourceDownload * _Nullable download;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull duration;
@property (nonatomic, readonly, strong) DDRUMResourceEventResourceFirstByte * _Nullable firstByte;
@property (nonatomic, readonly, copy) NSString * _Nullable id;
@property (nonatomic, readonly) enum DDRUMResourceEventResourceRUMMethod method;
@property (nonatomic, readonly, strong) DDRUMResourceEventResourceProvider * _Nullable provider;
@property (nonatomic, readonly, strong) DDRUMResourceEventResourceRedirect * _Nullable redirect;
@property (nonatomic, readonly, strong) NSNumber * _Nullable size;
@property (nonatomic, readonly, strong) DDRUMResourceEventResourceSSL * _Nullable ssl;
@property (nonatomic, readonly, strong) NSNumber * _Nullable statusCode;
@property (nonatomic, readonly) enum DDRUMResourceEventResourceResourceType type;
@property (nonatomic, copy) NSString * _Nonnull url;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc33DDRUMResourceEventResourceConnect")
@interface DDRUMResourceEventResourceConnect : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nonnull duration;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull start;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc29DDRUMResourceEventResourceDNS")
@interface DDRUMResourceEventResourceDNS : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nonnull duration;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull start;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc34DDRUMResourceEventResourceDownload")
@interface DDRUMResourceEventResourceDownload : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nonnull duration;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull start;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc35DDRUMResourceEventResourceFirstByte")
@interface DDRUMResourceEventResourceFirstByte : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nonnull duration;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull start;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum DDRUMResourceEventResourceProviderProviderType : NSInteger;

SWIFT_CLASS("_TtC11DatadogObjc34DDRUMResourceEventResourceProvider")
@interface DDRUMResourceEventResourceProvider : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable domain;
@property (nonatomic, readonly, copy) NSString * _Nullable name;
@property (nonatomic, readonly) enum DDRUMResourceEventResourceProviderProviderType type;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDRUMResourceEventResourceProviderProviderType, closed) {
  DDRUMResourceEventResourceProviderProviderTypeNone = 0,
  DDRUMResourceEventResourceProviderProviderTypeAd = 1,
  DDRUMResourceEventResourceProviderProviderTypeAdvertising = 2,
  DDRUMResourceEventResourceProviderProviderTypeAnalytics = 3,
  DDRUMResourceEventResourceProviderProviderTypeCdn = 4,
  DDRUMResourceEventResourceProviderProviderTypeContent = 5,
  DDRUMResourceEventResourceProviderProviderTypeCustomerSuccess = 6,
  DDRUMResourceEventResourceProviderProviderTypeFirstParty = 7,
  DDRUMResourceEventResourceProviderProviderTypeHosting = 8,
  DDRUMResourceEventResourceProviderProviderTypeMarketing = 9,
  DDRUMResourceEventResourceProviderProviderTypeOther = 10,
  DDRUMResourceEventResourceProviderProviderTypeSocial = 11,
  DDRUMResourceEventResourceProviderProviderTypeTagManager = 12,
  DDRUMResourceEventResourceProviderProviderTypeUtility = 13,
  DDRUMResourceEventResourceProviderProviderTypeVideo = 14,
};

typedef SWIFT_ENUM(NSInteger, DDRUMResourceEventResourceRUMMethod, closed) {
  DDRUMResourceEventResourceRUMMethodNone = 0,
  DDRUMResourceEventResourceRUMMethodPost = 1,
  DDRUMResourceEventResourceRUMMethodGet = 2,
  DDRUMResourceEventResourceRUMMethodHead = 3,
  DDRUMResourceEventResourceRUMMethodPut = 4,
  DDRUMResourceEventResourceRUMMethodDelete = 5,
  DDRUMResourceEventResourceRUMMethodPatch = 6,
};


SWIFT_CLASS("_TtC11DatadogObjc34DDRUMResourceEventResourceRedirect")
@interface DDRUMResourceEventResourceRedirect : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nonnull duration;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull start;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDRUMResourceEventResourceResourceType, closed) {
  DDRUMResourceEventResourceResourceTypeDocument = 0,
  DDRUMResourceEventResourceResourceTypeXhr = 1,
  DDRUMResourceEventResourceResourceTypeBeacon = 2,
  DDRUMResourceEventResourceResourceTypeFetch = 3,
  DDRUMResourceEventResourceResourceTypeCss = 4,
  DDRUMResourceEventResourceResourceTypeJs = 5,
  DDRUMResourceEventResourceResourceTypeImage = 6,
  DDRUMResourceEventResourceResourceTypeFont = 7,
  DDRUMResourceEventResourceResourceTypeMedia = 8,
  DDRUMResourceEventResourceResourceTypeOther = 9,
};


SWIFT_CLASS("_TtC11DatadogObjc29DDRUMResourceEventResourceSSL")
@interface DDRUMResourceEventResourceSSL : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nonnull duration;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull start;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum DDRUMResourceEventSessionSessionType : NSInteger;

SWIFT_CLASS("_TtC11DatadogObjc25DDRUMResourceEventSession")
@interface DDRUMResourceEventSession : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nullable hasReplay;
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
@property (nonatomic, readonly) enum DDRUMResourceEventSessionSessionType type;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDRUMResourceEventSessionSessionType, closed) {
  DDRUMResourceEventSessionSessionTypeUser = 0,
  DDRUMResourceEventSessionSessionTypeSynthetics = 1,
};


SWIFT_CLASS("_TtC11DatadogObjc22DDRUMResourceEventView")
@interface DDRUMResourceEventView : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, copy) NSString * _Nullable referrer;
@property (nonatomic, copy) NSString * _Nonnull url;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDRUMResourceType, closed) {
  DDRUMResourceTypeImage = 0,
  DDRUMResourceTypeXhr = 1,
  DDRUMResourceTypeBeacon = 2,
  DDRUMResourceTypeCss = 3,
  DDRUMResourceTypeDocument = 4,
  DDRUMResourceTypeFetch = 5,
  DDRUMResourceTypeFont = 6,
  DDRUMResourceTypeJs = 7,
  DDRUMResourceTypeMedia = 8,
  DDRUMResourceTypeOther = 9,
};

typedef SWIFT_ENUM(NSInteger, DDRUMUserActionType, closed) {
  DDRUMUserActionTypeTap = 0,
  DDRUMUserActionTypeScroll = 1,
  DDRUMUserActionTypeSwipe = 2,
  DDRUMUserActionTypeCustom = 3,
};


SWIFT_CLASS("_TtC11DatadogObjc9DDRUMView")
@interface DDRUMView : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull path;
@property (nonatomic, readonly, copy) NSDictionary<NSString *, id> * _Nonnull attributes;
/// Initializes the RUM View description.
/// \param path the RUM View path, appearing as “PATH” in RUM Explorer.
///
/// \param attributes additional attributes to associate with the RUM View.
///
- (nonnull instancetype)initWithPath:(NSString * _Nonnull)path attributes:(NSDictionary<NSString *, id> * _Nonnull)attributes OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class DDRUMViewEventDD;
@class DDRUMViewEventApplication;
@class DDRUMViewEventRUMConnectivity;
@class DDRUMViewEventSession;
@class DDRUMViewEventRUMUser;
@class DDRUMViewEventView;

SWIFT_CLASS("_TtC11DatadogObjc14DDRUMViewEvent")
@interface DDRUMViewEvent : NSObject
@property (nonatomic, readonly, strong) DDRUMViewEventDD * _Nonnull dd;
@property (nonatomic, readonly, strong) DDRUMViewEventApplication * _Nonnull application;
@property (nonatomic, readonly, strong) DDRUMViewEventRUMConnectivity * _Nullable connectivity;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull date;
@property (nonatomic, readonly, copy) NSString * _Nullable service;
@property (nonatomic, readonly, strong) DDRUMViewEventSession * _Nonnull session;
@property (nonatomic, readonly, copy) NSString * _Nonnull type;
@property (nonatomic, readonly, strong) DDRUMViewEventRUMUser * _Nullable usr;
@property (nonatomic, readonly, strong) DDRUMViewEventView * _Nonnull view;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc25DDRUMViewEventApplication")
@interface DDRUMViewEventApplication : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc16DDRUMViewEventDD")
@interface DDRUMViewEventDD : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nonnull documentVersion;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull formatVersion;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class DDRUMViewEventRUMConnectivityCellular;
enum DDRUMViewEventRUMConnectivityStatus : NSInteger;

SWIFT_CLASS("_TtC11DatadogObjc29DDRUMViewEventRUMConnectivity")
@interface DDRUMViewEventRUMConnectivity : NSObject
@property (nonatomic, readonly, strong) DDRUMViewEventRUMConnectivityCellular * _Nullable cellular;
@property (nonatomic, readonly, copy) NSArray<NSNumber *> * _Nonnull interfaces;
@property (nonatomic, readonly) enum DDRUMViewEventRUMConnectivityStatus status;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc37DDRUMViewEventRUMConnectivityCellular")
@interface DDRUMViewEventRUMConnectivityCellular : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable carrierName;
@property (nonatomic, readonly, copy) NSString * _Nullable technology;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDRUMViewEventRUMConnectivityInterfaces, closed) {
  DDRUMViewEventRUMConnectivityInterfacesBluetooth = 0,
  DDRUMViewEventRUMConnectivityInterfacesCellular = 1,
  DDRUMViewEventRUMConnectivityInterfacesEthernet = 2,
  DDRUMViewEventRUMConnectivityInterfacesWifi = 3,
  DDRUMViewEventRUMConnectivityInterfacesWimax = 4,
  DDRUMViewEventRUMConnectivityInterfacesMixed = 5,
  DDRUMViewEventRUMConnectivityInterfacesOther = 6,
  DDRUMViewEventRUMConnectivityInterfacesUnknown = 7,
  DDRUMViewEventRUMConnectivityInterfacesNone = 8,
};

typedef SWIFT_ENUM(NSInteger, DDRUMViewEventRUMConnectivityStatus, closed) {
  DDRUMViewEventRUMConnectivityStatusConnected = 0,
  DDRUMViewEventRUMConnectivityStatusNotConnected = 1,
  DDRUMViewEventRUMConnectivityStatusMaybe = 2,
};


SWIFT_CLASS("_TtC11DatadogObjc21DDRUMViewEventRUMUser")
@interface DDRUMViewEventRUMUser : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable email;
@property (nonatomic, readonly, copy) NSString * _Nullable id;
@property (nonatomic, readonly, copy) NSString * _Nullable name;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum DDRUMViewEventSessionSessionType : NSInteger;

SWIFT_CLASS("_TtC11DatadogObjc21DDRUMViewEventSession")
@interface DDRUMViewEventSession : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nullable hasReplay;
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
@property (nonatomic, readonly) enum DDRUMViewEventSessionSessionType type;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDRUMViewEventSessionSessionType, closed) {
  DDRUMViewEventSessionSessionTypeUser = 0,
  DDRUMViewEventSessionSessionTypeSynthetics = 1,
};

@class DDRUMViewEventViewAction;
@class DDRUMViewEventViewCrash;
@class DDRUMViewEventViewError;
enum DDRUMViewEventViewLoadingType : NSInteger;
@class DDRUMViewEventViewLongTask;
@class DDRUMViewEventViewResource;

SWIFT_CLASS("_TtC11DatadogObjc18DDRUMViewEventView")
@interface DDRUMViewEventView : NSObject
@property (nonatomic, readonly, strong) DDRUMViewEventViewAction * _Nonnull action;
@property (nonatomic, readonly, strong) DDRUMViewEventViewCrash * _Nullable crash;
@property (nonatomic, readonly, strong) NSNumber * _Nullable cumulativeLayoutShift;
@property (nonatomic, readonly, copy) NSDictionary<NSString *, NSNumber *> * _Nullable customTimings;
@property (nonatomic, readonly, strong) NSNumber * _Nullable domComplete;
@property (nonatomic, readonly, strong) NSNumber * _Nullable domContentLoaded;
@property (nonatomic, readonly, strong) NSNumber * _Nullable domInteractive;
@property (nonatomic, readonly, strong) DDRUMViewEventViewError * _Nonnull error;
@property (nonatomic, readonly, strong) NSNumber * _Nullable firstContentfulPaint;
@property (nonatomic, readonly, strong) NSNumber * _Nullable firstInputDelay;
@property (nonatomic, readonly, strong) NSNumber * _Nullable firstInputTime;
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
@property (nonatomic, readonly, strong) NSNumber * _Nullable isActive;
@property (nonatomic, readonly, strong) NSNumber * _Nullable largestContentfulPaint;
@property (nonatomic, readonly, strong) NSNumber * _Nullable loadEvent;
@property (nonatomic, readonly, strong) NSNumber * _Nullable loadingTime;
@property (nonatomic, readonly) enum DDRUMViewEventViewLoadingType loadingType;
@property (nonatomic, readonly, strong) DDRUMViewEventViewLongTask * _Nullable longTask;
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, copy) NSString * _Nullable referrer;
@property (nonatomic, readonly, strong) DDRUMViewEventViewResource * _Nonnull resource;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull timeSpent;
@property (nonatomic, copy) NSString * _Nonnull url;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc24DDRUMViewEventViewAction")
@interface DDRUMViewEventViewAction : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nonnull count;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc23DDRUMViewEventViewCrash")
@interface DDRUMViewEventViewCrash : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nonnull count;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc23DDRUMViewEventViewError")
@interface DDRUMViewEventViewError : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nonnull count;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDRUMViewEventViewLoadingType, closed) {
  DDRUMViewEventViewLoadingTypeNone = 0,
  DDRUMViewEventViewLoadingTypeInitialLoad = 1,
  DDRUMViewEventViewLoadingTypeRouteChange = 2,
  DDRUMViewEventViewLoadingTypeActivityDisplay = 3,
  DDRUMViewEventViewLoadingTypeActivityRedisplay = 4,
  DDRUMViewEventViewLoadingTypeFragmentDisplay = 5,
  DDRUMViewEventViewLoadingTypeFragmentRedisplay = 6,
  DDRUMViewEventViewLoadingTypeViewControllerDisplay = 7,
  DDRUMViewEventViewLoadingTypeViewControllerRedisplay = 8,
};


SWIFT_CLASS("_TtC11DatadogObjc26DDRUMViewEventViewLongTask")
@interface DDRUMViewEventViewLongTask : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nonnull count;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc26DDRUMViewEventViewResource")
@interface DDRUMViewEventViewResource : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nonnull count;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDSDKVerbosityLevel, closed) {
  DDSDKVerbosityLevelNone = 0,
  DDSDKVerbosityLevelDebug = 1,
  DDSDKVerbosityLevelInfo = 2,
  DDSDKVerbosityLevelNotice = 3,
  DDSDKVerbosityLevelWarn = 4,
  DDSDKVerbosityLevelError = 5,
  DDSDKVerbosityLevelCritical = 6,
};

@protocol OTSpan;
@class NSDictionary;
@protocol OTSpanContext;

/// Corresponds to: https://github.com/opentracing/opentracing-objc/blob/master/Pod/Classes/OTTracer.h
SWIFT_PROTOCOL("_TtP11DatadogObjc8OTTracer_")
@protocol OTTracer
- (id <OTSpan> _Nonnull)startSpan:(NSString * _Nonnull)operationName SWIFT_WARN_UNUSED_RESULT;
- (id <OTSpan> _Nonnull)startSpan:(NSString * _Nonnull)operationName tags:(NSDictionary * _Nullable)tags SWIFT_WARN_UNUSED_RESULT;
- (id <OTSpan> _Nonnull)startSpan:(NSString * _Nonnull)operationName childOf:(id <OTSpanContext> _Nullable)parent SWIFT_WARN_UNUSED_RESULT;
- (id <OTSpan> _Nonnull)startSpan:(NSString * _Nonnull)operationName childOf:(id <OTSpanContext> _Nullable)parent tags:(NSDictionary * _Nullable)tags SWIFT_WARN_UNUSED_RESULT;
- (id <OTSpan> _Nonnull)startSpan:(NSString * _Nonnull)operationName childOf:(id <OTSpanContext> _Nullable)parent tags:(NSDictionary * _Nullable)tags startTime:(NSDate * _Nullable)startTime SWIFT_WARN_UNUSED_RESULT;
- (BOOL)inject:(id <OTSpanContext> _Nonnull)spanContext format:(NSString * _Nonnull)format carrier:(id _Nonnull)carrier error:(NSError * _Nullable * _Nullable)error;
- (BOOL)extractWithFormat:(NSString * _Nonnull)format carrier:(id _Nonnull)carrier error:(NSError * _Nullable * _Nullable)error;
@end

@class DDTracerConfiguration;

SWIFT_CLASS("_TtC11DatadogObjc8DDTracer")
@interface DDTracer : NSObject <OTTracer>
+ (id <OTTracer> _Nonnull)initializeWithConfiguration:(DDTracerConfiguration * _Nonnull)configuration SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED_MSG("Use `DDTracer(configuration:)`.");
- (nonnull instancetype)initWithConfiguration:(DDTracerConfiguration * _Nonnull)configuration;
- (id <OTSpan> _Nonnull)startSpan:(NSString * _Nonnull)operationName SWIFT_WARN_UNUSED_RESULT;
- (id <OTSpan> _Nonnull)startSpan:(NSString * _Nonnull)operationName tags:(NSDictionary * _Nullable)tags SWIFT_WARN_UNUSED_RESULT;
- (id <OTSpan> _Nonnull)startSpan:(NSString * _Nonnull)operationName childOf:(id <OTSpanContext> _Nullable)parent SWIFT_WARN_UNUSED_RESULT;
- (id <OTSpan> _Nonnull)startSpan:(NSString * _Nonnull)operationName childOf:(id <OTSpanContext> _Nullable)parent tags:(NSDictionary * _Nullable)tags SWIFT_WARN_UNUSED_RESULT;
- (id <OTSpan> _Nonnull)startSpan:(NSString * _Nonnull)operationName childOf:(id <OTSpanContext> _Nullable)parent tags:(NSDictionary * _Nullable)tags startTime:(NSDate * _Nullable)startTime SWIFT_WARN_UNUSED_RESULT;
- (BOOL)inject:(id <OTSpanContext> _Nonnull)spanContext format:(NSString * _Nonnull)format carrier:(id _Nonnull)carrier error:(NSError * _Nullable * _Nullable)error;
- (BOOL)extractWithFormat:(NSString * _Nonnull)format carrier:(id _Nonnull)carrier error:(NSError * _Nullable * _Nullable)error;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc21DDTracerConfiguration")
@interface DDTracerConfiguration : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (void)setWithServiceName:(NSString * _Nonnull)serviceName;
- (void)sendNetworkInfo:(BOOL)enabled;
@end


SWIFT_CLASS("_TtC11DatadogObjc16DDTracesEndpoint")
@interface DDTracesEndpoint : NSObject
+ (DDTracesEndpoint * _Nonnull)eu SWIFT_WARN_UNUSED_RESULT;
+ (DDTracesEndpoint * _Nonnull)us SWIFT_WARN_UNUSED_RESULT;
+ (DDTracesEndpoint * _Nonnull)gov SWIFT_WARN_UNUSED_RESULT;
+ (DDTracesEndpoint * _Nonnull)customWithUrl:(NSString * _Nonnull)url SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc17DDTrackingConsent")
@interface DDTrackingConsent : NSObject
+ (DDTrackingConsent * _Nonnull)granted SWIFT_WARN_UNUSED_RESULT;
+ (DDTrackingConsent * _Nonnull)notGranted SWIFT_WARN_UNUSED_RESULT;
+ (DDTrackingConsent * _Nonnull)pending SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_PROTOCOL("_TtP11DatadogObjc24DDUIKitRUMViewsPredicate_")
@protocol DDUIKitRUMViewsPredicate
/// The predicate deciding if the RUM View should be started or ended for given instance of the <code>UIViewController</code>.
/// \param viewController an instance of the view controller noticed by the SDK.
///
///
/// returns:
/// RUM View parameters if received view controller should start/end the RUM View, <code>nil</code> otherwise.
- (DDRUMView * _Nullable)rumViewFor:(UIViewController * _Nonnull)viewController SWIFT_WARN_UNUSED_RESULT;
@end

typedef SWIFT_ENUM(NSInteger, DDUploadFrequency, closed) {
  DDUploadFrequencyFrequent = 0,
  DDUploadFrequencyAverage = 1,
  DDUploadFrequencyRare = 2,
};


SWIFT_CLASS("_TtC11DatadogObjc2OT")
@interface OT : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull formatTextMap;)
+ (NSString * _Nonnull)formatTextMap SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class NSString;

/// Corresponds to: https://github.com/opentracing/opentracing-objc/blob/master/Pod/Classes/OTSpan.h
SWIFT_PROTOCOL("_TtP11DatadogObjc6OTSpan_")
@protocol OTSpan
@property (nonatomic, readonly, strong) id <OTSpanContext> _Nonnull context;
@property (nonatomic, readonly, strong) id <OTTracer> _Nonnull tracer;
- (void)setOperationName:(NSString * _Nonnull)operationName;
- (void)setTag:(NSString * _Nonnull)key value:(NSString * _Nonnull)value;
- (void)setTag:(NSString * _Nonnull)key numberValue:(NSNumber * _Nonnull)numberValue;
- (void)setTag:(NSString * _Nonnull)key boolValue:(BOOL)boolValue;
- (void)log:(NSDictionary<NSString *, NSObject *> * _Nonnull)fields;
- (void)log:(NSDictionary<NSString *, NSObject *> * _Nonnull)fields timestamp:(NSDate * _Nullable)timestamp;
- (id <OTSpan> _Nonnull)setBaggageItem:(NSString * _Nonnull)key value:(NSString * _Nonnull)value SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getBaggageItem:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
- (void)setError:(NSError * _Nonnull)error;
- (void)setErrorWithKind:(NSString * _Nonnull)kind message:(NSString * _Nonnull)message stack:(NSString * _Nullable)stack;
- (void)finish;
- (void)finishWithTime:(NSDate * _Nullable)finishTime;
- (id <OTSpan> _Nonnull)setActive;
@end


/// Corresponds to: https://github.com/opentracing/opentracing-objc/blob/master/Pod/Classes/OTSpanContext.h
SWIFT_PROTOCOL("_TtP11DatadogObjc13OTSpanContext_")
@protocol OTSpanContext
- (void)forEachBaggageItem:(SWIFT_NOESCAPE BOOL (^ _Nonnull)(NSString * _Nonnull, NSString * _Nonnull))callback;
@end


#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif

#endif
